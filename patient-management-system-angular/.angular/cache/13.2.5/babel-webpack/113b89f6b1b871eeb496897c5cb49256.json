{"ast":null,"code":"import \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport global from 'global';\nvar document = global.document; // https://html.spec.whatwg.org/multipage/scripting.html\n\nvar runScriptTypes = ['application/javascript', 'application/ecmascript', 'application/x-ecmascript', 'application/x-javascript', 'text/ecmascript', 'text/javascript', 'text/javascript1.0', 'text/javascript1.1', 'text/javascript1.2', 'text/javascript1.3', 'text/javascript1.4', 'text/javascript1.5', 'text/jscript', 'text/livescript', 'text/x-ecmascript', 'text/x-javascript', // Support modern javascript\n'module'];\nvar SCRIPT = 'script';\nvar SCRIPTS_ROOT_ID = 'scripts-root'; // trigger DOMContentLoaded\n\nexport function simulateDOMContentLoaded() {\n  var DOMContentLoadedEvent = document.createEvent('Event');\n  DOMContentLoadedEvent.initEvent('DOMContentLoaded', true, true);\n  document.dispatchEvent(DOMContentLoadedEvent);\n}\n\nfunction insertScript($script, callback, $scriptRoot) {\n  var scriptEl = document.createElement('script');\n  scriptEl.type = $script.type === 'module' ? 'module' : 'text/javascript';\n\n  if ($script.src) {\n    scriptEl.onload = callback;\n    scriptEl.onerror = callback;\n    scriptEl.src = $script.src;\n  } else {\n    scriptEl.textContent = $script.innerText;\n  } // re-insert the script tag so it executes.\n\n\n  if ($scriptRoot) $scriptRoot.appendChild(scriptEl);else document.head.appendChild(scriptEl); // clean-up\n\n  $script.parentNode.removeChild($script); // run the callback immediately for inline scripts\n\n  if (!$script.src) callback();\n} // runs an array of async functions in sequential order\n\n/* eslint-disable no-param-reassign, no-plusplus */\n\n\nfunction insertScriptsSequentially(scriptsToExecute, callback) {\n  var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  scriptsToExecute[index](function () {\n    index++;\n\n    if (index === scriptsToExecute.length) {\n      callback();\n    } else {\n      insertScriptsSequentially(scriptsToExecute, callback, index);\n    }\n  });\n}\n\nexport function simulatePageLoad($container) {\n  var $scriptsRoot = document.getElementById(SCRIPTS_ROOT_ID);\n\n  if (!$scriptsRoot) {\n    $scriptsRoot = document.createElement('div');\n    $scriptsRoot.id = SCRIPTS_ROOT_ID;\n    document.body.appendChild($scriptsRoot);\n  } else {\n    $scriptsRoot.innerHTML = '';\n  }\n\n  var $scripts = Array.from($container.querySelectorAll(SCRIPT));\n\n  if ($scripts.length) {\n    var scriptsToExecute = [];\n    $scripts.forEach(function ($script) {\n      var typeAttr = $script.getAttribute('type'); // only run script tags without the type attribute\n      // or with a javascript mime attribute value from the list\n\n      if (!typeAttr || runScriptTypes.includes(typeAttr)) {\n        scriptsToExecute.push(function (callback) {\n          return insertScript($script, callback, $scriptsRoot);\n        });\n      }\n    }); // insert the script tags sequentially\n    // to preserve execution order\n\n    if (scriptsToExecute.length) {\n      insertScriptsSequentially(scriptsToExecute, simulateDOMContentLoaded, undefined);\n    }\n  } else {\n    simulateDOMContentLoaded();\n  }\n}","map":{"version":3,"sources":["F:/work/Cegedim Hackathon 2022/patient-management-system/patient-management-system-angular/node_modules/@storybook/preview-web/dist/esm/simulate-pageload.js"],"names":["global","document","runScriptTypes","SCRIPT","SCRIPTS_ROOT_ID","simulateDOMContentLoaded","DOMContentLoadedEvent","createEvent","initEvent","dispatchEvent","insertScript","$script","callback","$scriptRoot","scriptEl","createElement","type","src","onload","onerror","textContent","innerText","appendChild","head","parentNode","removeChild","insertScriptsSequentially","scriptsToExecute","index","arguments","length","undefined","simulatePageLoad","$container","$scriptsRoot","getElementById","id","body","innerHTML","$scripts","Array","from","querySelectorAll","forEach","typeAttr","getAttribute","includes","push"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport global from 'global';\nvar document = global.document; // https://html.spec.whatwg.org/multipage/scripting.html\n\nvar runScriptTypes = ['application/javascript', 'application/ecmascript', 'application/x-ecmascript', 'application/x-javascript', 'text/ecmascript', 'text/javascript', 'text/javascript1.0', 'text/javascript1.1', 'text/javascript1.2', 'text/javascript1.3', 'text/javascript1.4', 'text/javascript1.5', 'text/jscript', 'text/livescript', 'text/x-ecmascript', 'text/x-javascript', // Support modern javascript\n'module'];\nvar SCRIPT = 'script';\nvar SCRIPTS_ROOT_ID = 'scripts-root'; // trigger DOMContentLoaded\n\nexport function simulateDOMContentLoaded() {\n  var DOMContentLoadedEvent = document.createEvent('Event');\n  DOMContentLoadedEvent.initEvent('DOMContentLoaded', true, true);\n  document.dispatchEvent(DOMContentLoadedEvent);\n}\n\nfunction insertScript($script, callback, $scriptRoot) {\n  var scriptEl = document.createElement('script');\n  scriptEl.type = $script.type === 'module' ? 'module' : 'text/javascript';\n\n  if ($script.src) {\n    scriptEl.onload = callback;\n    scriptEl.onerror = callback;\n    scriptEl.src = $script.src;\n  } else {\n    scriptEl.textContent = $script.innerText;\n  } // re-insert the script tag so it executes.\n\n\n  if ($scriptRoot) $scriptRoot.appendChild(scriptEl);else document.head.appendChild(scriptEl); // clean-up\n\n  $script.parentNode.removeChild($script); // run the callback immediately for inline scripts\n\n  if (!$script.src) callback();\n} // runs an array of async functions in sequential order\n\n/* eslint-disable no-param-reassign, no-plusplus */\n\n\nfunction insertScriptsSequentially(scriptsToExecute, callback) {\n  var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  scriptsToExecute[index](function () {\n    index++;\n\n    if (index === scriptsToExecute.length) {\n      callback();\n    } else {\n      insertScriptsSequentially(scriptsToExecute, callback, index);\n    }\n  });\n}\n\nexport function simulatePageLoad($container) {\n  var $scriptsRoot = document.getElementById(SCRIPTS_ROOT_ID);\n\n  if (!$scriptsRoot) {\n    $scriptsRoot = document.createElement('div');\n    $scriptsRoot.id = SCRIPTS_ROOT_ID;\n    document.body.appendChild($scriptsRoot);\n  } else {\n    $scriptsRoot.innerHTML = '';\n  }\n\n  var $scripts = Array.from($container.querySelectorAll(SCRIPT));\n\n  if ($scripts.length) {\n    var scriptsToExecute = [];\n    $scripts.forEach(function ($script) {\n      var typeAttr = $script.getAttribute('type'); // only run script tags without the type attribute\n      // or with a javascript mime attribute value from the list\n\n      if (!typeAttr || runScriptTypes.includes(typeAttr)) {\n        scriptsToExecute.push(function (callback) {\n          return insertScript($script, callback, $scriptsRoot);\n        });\n      }\n    }); // insert the script tags sequentially\n    // to preserve execution order\n\n    if (scriptsToExecute.length) {\n      insertScriptsSequentially(scriptsToExecute, simulateDOMContentLoaded, undefined);\n    }\n  } else {\n    simulateDOMContentLoaded();\n  }\n}"]},"metadata":{},"sourceType":"module"}