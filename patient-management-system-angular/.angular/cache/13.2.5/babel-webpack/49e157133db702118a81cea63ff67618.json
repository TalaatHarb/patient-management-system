{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keyboard = keyboard;\nexports.keyboardImplementationWrapper = keyboardImplementationWrapper;\nObject.defineProperty(exports, \"specialCharMap\", {\n  enumerable: true,\n  get: function () {\n    return _specialCharMap.specialCharMap;\n  }\n});\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _keyboardImplementation = require(\"./keyboardImplementation\");\n\nvar _keyMap = require(\"./keyMap\");\n\nvar _specialCharMap = require(\"./specialCharMap\");\n\nfunction keyboard(text, options) {\n  var _options$delay;\n\n  var _keyboardImplementati = keyboardImplementationWrapper(text, options),\n      promise = _keyboardImplementati.promise,\n      state = _keyboardImplementati.state;\n\n  if (((_options$delay = options == null ? void 0 : options.delay) != null ? _options$delay : 0) > 0) {\n    return (0, _dom.getConfig)().asyncWrapper(function () {\n      return promise.then(function () {\n        return state;\n      });\n    });\n  } else {\n    // prevent users from dealing with UnhandledPromiseRejectionWarning in sync call\n    promise.catch(console.error);\n    return state;\n  }\n}\n\nfunction keyboardImplementationWrapper(text) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _config$keyboardState = config.keyboardState,\n      state = _config$keyboardState === void 0 ? createKeyboardState() : _config$keyboardState,\n      _config$delay = config.delay,\n      delay = _config$delay === void 0 ? 0 : _config$delay,\n      _config$document = config.document,\n      doc = _config$document === void 0 ? document : _config$document,\n      _config$autoModify = config.autoModify,\n      autoModify = _config$autoModify === void 0 ? false : _config$autoModify,\n      _config$keyboardMap = config.keyboardMap,\n      keyboardMap = _config$keyboardMap === void 0 ? _keyMap.defaultKeyMap : _config$keyboardMap;\n  var options = {\n    delay: delay,\n    document: doc,\n    autoModify: autoModify,\n    keyboardMap: keyboardMap\n  };\n  return {\n    promise: (0, _keyboardImplementation.keyboardImplementation)(text, options, state),\n    state: state,\n    releaseAllKeys: function () {\n      return (0, _keyboardImplementation.releaseAllKeys)(options, state);\n    }\n  };\n}\n\nfunction createKeyboardState() {\n  return {\n    activeElement: null,\n    pressed: [],\n    carryChar: '',\n    modifiers: {\n      alt: false,\n      caps: false,\n      ctrl: false,\n      meta: false,\n      shift: false\n    }\n  };\n}","map":{"version":3,"sources":["F:/work/Cegedim Hackathon 2022/patient-management-system/patient-management-system-angular/node_modules/@testing-library/user-event/dist/keyboard/index.js"],"names":["Object","defineProperty","exports","value","keyboard","keyboardImplementationWrapper","enumerable","get","_specialCharMap","specialCharMap","_dom","require","_keyboardImplementation","_keyMap","text","options","_options$delay","_keyboardImplementati","promise","state","delay","getConfig","asyncWrapper","then","catch","console","error","config","arguments","length","undefined","_config$keyboardState","keyboardState","createKeyboardState","_config$delay","_config$document","document","doc","_config$autoModify","autoModify","_config$keyboardMap","keyboardMap","defaultKeyMap","keyboardImplementation","releaseAllKeys","activeElement","pressed","carryChar","modifiers","alt","caps","ctrl","meta","shift"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keyboard = keyboard;\nexports.keyboardImplementationWrapper = keyboardImplementationWrapper;\nObject.defineProperty(exports, \"specialCharMap\", {\n  enumerable: true,\n  get: function () {\n    return _specialCharMap.specialCharMap;\n  }\n});\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _keyboardImplementation = require(\"./keyboardImplementation\");\n\nvar _keyMap = require(\"./keyMap\");\n\nvar _specialCharMap = require(\"./specialCharMap\");\n\nfunction keyboard(text, options) {\n  var _options$delay;\n\n  var _keyboardImplementati = keyboardImplementationWrapper(text, options),\n      promise = _keyboardImplementati.promise,\n      state = _keyboardImplementati.state;\n\n  if (((_options$delay = options == null ? void 0 : options.delay) != null ? _options$delay : 0) > 0) {\n    return (0, _dom.getConfig)().asyncWrapper(function () {\n      return promise.then(function () {\n        return state;\n      });\n    });\n  } else {\n    // prevent users from dealing with UnhandledPromiseRejectionWarning in sync call\n    promise.catch(console.error);\n    return state;\n  }\n}\n\nfunction keyboardImplementationWrapper(text) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _config$keyboardState = config.keyboardState,\n      state = _config$keyboardState === void 0 ? createKeyboardState() : _config$keyboardState,\n      _config$delay = config.delay,\n      delay = _config$delay === void 0 ? 0 : _config$delay,\n      _config$document = config.document,\n      doc = _config$document === void 0 ? document : _config$document,\n      _config$autoModify = config.autoModify,\n      autoModify = _config$autoModify === void 0 ? false : _config$autoModify,\n      _config$keyboardMap = config.keyboardMap,\n      keyboardMap = _config$keyboardMap === void 0 ? _keyMap.defaultKeyMap : _config$keyboardMap;\n  var options = {\n    delay: delay,\n    document: doc,\n    autoModify: autoModify,\n    keyboardMap: keyboardMap\n  };\n  return {\n    promise: (0, _keyboardImplementation.keyboardImplementation)(text, options, state),\n    state: state,\n    releaseAllKeys: function () {\n      return (0, _keyboardImplementation.releaseAllKeys)(options, state);\n    }\n  };\n}\n\nfunction createKeyboardState() {\n  return {\n    activeElement: null,\n    pressed: [],\n    carryChar: '',\n    modifiers: {\n      alt: false,\n      caps: false,\n      ctrl: false,\n      meta: false,\n      shift: false\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}