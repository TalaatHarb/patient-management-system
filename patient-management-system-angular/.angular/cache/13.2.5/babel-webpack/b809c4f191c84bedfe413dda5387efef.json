{"ast":null,"code":"import { __values } from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function bufferTime(bufferTimeSpan) {\n  var _a, _b;\n\n  var otherArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    otherArgs[_i - 1] = arguments[_i];\n  }\n\n  var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n  var bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n  var maxBufferSize = otherArgs[1] || Infinity;\n  return operate(function (source, subscriber) {\n    var bufferRecords = [];\n    var restartOnEmit = false;\n\n    var emit = function (record) {\n      var buffer = record.buffer,\n          subs = record.subs;\n      subs.unsubscribe();\n      arrRemove(bufferRecords, record);\n      subscriber.next(buffer);\n      restartOnEmit && startBuffer();\n    };\n\n    var startBuffer = function () {\n      if (bufferRecords) {\n        var subs = new Subscription();\n        subscriber.add(subs);\n        var buffer = [];\n        var record_1 = {\n          buffer: buffer,\n          subs: subs\n        };\n        bufferRecords.push(record_1);\n        executeSchedule(subs, scheduler, function () {\n          return emit(record_1);\n        }, bufferTimeSpan);\n      }\n    };\n\n    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n      executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n    } else {\n      restartOnEmit = true;\n    }\n\n    startBuffer();\n    var bufferTimeSubscriber = createOperatorSubscriber(subscriber, function (value) {\n      var e_1, _a;\n\n      var recordsCopy = bufferRecords.slice();\n\n      try {\n        for (var recordsCopy_1 = __values(recordsCopy), recordsCopy_1_1 = recordsCopy_1.next(); !recordsCopy_1_1.done; recordsCopy_1_1 = recordsCopy_1.next()) {\n          var record = recordsCopy_1_1.value;\n          var buffer = record.buffer;\n          buffer.push(value);\n          maxBufferSize <= buffer.length && emit(record);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (recordsCopy_1_1 && !recordsCopy_1_1.done && (_a = recordsCopy_1.return)) _a.call(recordsCopy_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }, function () {\n      while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {\n        subscriber.next(bufferRecords.shift().buffer);\n      }\n\n      bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();\n      subscriber.complete();\n      subscriber.unsubscribe();\n    }, undefined, function () {\n      return bufferRecords = null;\n    });\n    source.subscribe(bufferTimeSubscriber);\n  });\n} //# sourceMappingURL=bufferTime.js.map","map":{"version":3,"sources":["F:/work/Cegedim Hackathon 2022/patient-management-system/patient-management-system-angular/node_modules/rxjs/dist/esm5/internal/operators/bufferTime.js"],"names":["__values","Subscription","operate","createOperatorSubscriber","arrRemove","asyncScheduler","popScheduler","executeSchedule","bufferTime","bufferTimeSpan","_a","_b","otherArgs","_i","arguments","length","scheduler","bufferCreationInterval","maxBufferSize","Infinity","source","subscriber","bufferRecords","restartOnEmit","emit","record","buffer","subs","unsubscribe","next","startBuffer","add","record_1","push","bufferTimeSubscriber","value","e_1","recordsCopy","slice","recordsCopy_1","recordsCopy_1_1","done","e_1_1","error","return","call","shift","complete","undefined","subscribe"],"mappings":"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","sourcesContent":["import { __values } from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function bufferTime(bufferTimeSpan) {\n    var _a, _b;\n    var otherArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherArgs[_i - 1] = arguments[_i];\n    }\n    var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n    var bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n    var maxBufferSize = otherArgs[1] || Infinity;\n    return operate(function (source, subscriber) {\n        var bufferRecords = [];\n        var restartOnEmit = false;\n        var emit = function (record) {\n            var buffer = record.buffer, subs = record.subs;\n            subs.unsubscribe();\n            arrRemove(bufferRecords, record);\n            subscriber.next(buffer);\n            restartOnEmit && startBuffer();\n        };\n        var startBuffer = function () {\n            if (bufferRecords) {\n                var subs = new Subscription();\n                subscriber.add(subs);\n                var buffer = [];\n                var record_1 = {\n                    buffer: buffer,\n                    subs: subs,\n                };\n                bufferRecords.push(record_1);\n                executeSchedule(subs, scheduler, function () { return emit(record_1); }, bufferTimeSpan);\n            }\n        };\n        if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n            executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n        }\n        else {\n            restartOnEmit = true;\n        }\n        startBuffer();\n        var bufferTimeSubscriber = createOperatorSubscriber(subscriber, function (value) {\n            var e_1, _a;\n            var recordsCopy = bufferRecords.slice();\n            try {\n                for (var recordsCopy_1 = __values(recordsCopy), recordsCopy_1_1 = recordsCopy_1.next(); !recordsCopy_1_1.done; recordsCopy_1_1 = recordsCopy_1.next()) {\n                    var record = recordsCopy_1_1.value;\n                    var buffer = record.buffer;\n                    buffer.push(value);\n                    maxBufferSize <= buffer.length && emit(record);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (recordsCopy_1_1 && !recordsCopy_1_1.done && (_a = recordsCopy_1.return)) _a.call(recordsCopy_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }, function () {\n            while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {\n                subscriber.next(bufferRecords.shift().buffer);\n            }\n            bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();\n            subscriber.complete();\n            subscriber.unsubscribe();\n        }, undefined, function () { return (bufferRecords = null); });\n        source.subscribe(bufferTimeSubscriber);\n    });\n}\n//# sourceMappingURL=bufferTime.js.map"]},"metadata":{},"sourceType":"module"}