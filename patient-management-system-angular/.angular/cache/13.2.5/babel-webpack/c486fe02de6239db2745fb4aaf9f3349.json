{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\work\\\\Cegedim Hackathon 2022\\\\patient-management-system\\\\patient-management-system-angular\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nimport React from 'react';\nimport pLimit from 'p-limit';\nimport { nanoid } from 'nanoid';\nimport { rendererFactory } from '@storybook/angular/renderer';\nvar limit = pLimit(1);\n/**\n * Uses the angular renderer to generate a story. Uses p-limit to run synchronously\n */\n\nexport var prepareForInline = function prepareForInline(storyFn, _ref) {\n  var id = _ref.id,\n      parameters = _ref.parameters,\n      component = _ref.component;\n  var el = React.useRef();\n  React.useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              limit( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                var renderer;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return rendererFactory.getRendererInstance(\"\".concat(id, \"-\").concat(nanoid(10)).toLowerCase(), el.current);\n\n                      case 2:\n                        renderer = _context.sent;\n\n                        if (!renderer) {\n                          _context.next = 6;\n                          break;\n                        }\n\n                        _context.next = 6;\n                        return renderer.render({\n                          forced: false,\n                          component: component,\n                          parameters: parameters,\n                          storyFnAngular: storyFn(),\n                          targetDOMNode: el.current\n                        });\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  });\n  return /*#__PURE__*/React.createElement('div', {\n    ref: el\n  });\n};","map":{"version":3,"sources":["F:/work/Cegedim Hackathon 2022/patient-management-system/patient-management-system-angular/node_modules/@storybook/addon-docs/dist/esm/frameworks/angular/prepareForInline.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","React","pLimit","nanoid","rendererFactory","limit","prepareForInline","storyFn","_ref","id","parameters","component","el","useRef","useEffect","mark","_callee2","wrap","_callee2$","_context2","prev","next","_callee","renderer","_callee$","_context","getRendererInstance","concat","toLowerCase","current","sent","render","forced","storyFnAngular","targetDOMNode","stop","createElement","ref"],"mappings":"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","sourcesContent":["import \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from 'react';\nimport pLimit from 'p-limit';\nimport { nanoid } from 'nanoid';\nimport { rendererFactory } from '@storybook/angular/renderer';\nvar limit = pLimit(1);\n/**\n * Uses the angular renderer to generate a story. Uses p-limit to run synchronously\n */\n\nexport var prepareForInline = function prepareForInline(storyFn, _ref) {\n  var id = _ref.id,\n      parameters = _ref.parameters,\n      component = _ref.component;\n  var el = React.useRef();\n  React.useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              limit( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                var renderer;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return rendererFactory.getRendererInstance(\"\".concat(id, \"-\").concat(nanoid(10)).toLowerCase(), el.current);\n\n                      case 2:\n                        renderer = _context.sent;\n\n                        if (!renderer) {\n                          _context.next = 6;\n                          break;\n                        }\n\n                        _context.next = 6;\n                        return renderer.render({\n                          forced: false,\n                          component: component,\n                          parameters: parameters,\n                          storyFnAngular: storyFn(),\n                          targetDOMNode: el.current\n                        });\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  });\n  return /*#__PURE__*/React.createElement('div', {\n    ref: el\n  });\n};"]},"metadata":{},"sourceType":"module"}