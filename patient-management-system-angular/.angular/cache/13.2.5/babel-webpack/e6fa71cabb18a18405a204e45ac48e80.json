{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\work\\\\Cegedim Hackathon 2022\\\\patient-management-system\\\\patient-management-system-angular\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport memoize from 'memoizerific';\nimport mapValues from 'lodash/mapValues';\nimport pick from 'lodash/pick';\nimport global from 'global';\nimport { SynchronousPromise } from 'synchronous-promise';\nimport { StoryIndexStore } from './StoryIndexStore';\nimport { ArgsStore } from './ArgsStore';\nimport { GlobalsStore } from './GlobalsStore';\nimport { processCSFFile } from './processCSFFile';\nimport { prepareStory } from './prepareStory';\nimport { HooksContext } from './hooks';\nimport { normalizeInputTypes } from './normalizeInputTypes';\nimport { inferArgTypes } from './inferArgTypes';\nimport { inferControls } from './inferControls'; // TODO -- what are reasonable values for these?\n\nvar CSF_CACHE_SIZE = 1000;\nvar STORY_CACHE_SIZE = 10000;\n\nfunction normalizeProjectAnnotations(_ref) {\n  var argTypes = _ref.argTypes,\n      globalTypes = _ref.globalTypes,\n      argTypesEnhancers = _ref.argTypesEnhancers,\n      annotations = _objectWithoutProperties(_ref, [\"argTypes\", \"globalTypes\", \"argTypesEnhancers\"]);\n\n  return Object.assign({}, argTypes && {\n    argTypes: normalizeInputTypes(argTypes)\n  }, globalTypes && {\n    globalTypes: normalizeInputTypes(globalTypes)\n  }, {\n    argTypesEnhancers: [].concat(_toConsumableArray(argTypesEnhancers || []), [inferArgTypes, // inferControls technically should only run if the user is using the controls addon,\n    // and so should be added by a preset there. However, as it seems some code relies on controls\n    // annotations (in particular the angular implementation's `cleanArgsDecorator`), for backwards\n    // compatibility reasons, we will leave this in the store until 7.0\n    inferControls])\n  }, annotations);\n}\n\nexport var StoryStore = /*#__PURE__*/function () {\n  function StoryStore() {\n    var _this = this;\n\n    _classCallCheck(this, StoryStore);\n\n    this.storyIndex = void 0;\n    this.importFn = void 0;\n    this.projectAnnotations = void 0;\n    this.globals = void 0;\n    this.args = void 0;\n    this.hooks = void 0;\n    this.cachedCSFFiles = void 0;\n    this.processCSFFileWithCache = void 0;\n    this.prepareStoryWithCache = void 0;\n    this.initializationPromise = void 0;\n    this.resolveInitializationPromise = void 0;\n\n    this.getStoriesJsonData = function () {\n      var value = _this.getSetStoriesPayload();\n\n      var allowedParameters = ['fileName', 'docsOnly', 'framework', '__id', '__isArgsStory'];\n      var stories = mapValues(value.stories, function (story) {\n        var _global$FEATURES;\n\n        return Object.assign({}, pick(story, ['id', 'name', 'title']), {\n          importPath: _this.storyIndex.stories[story.id].importPath\n        }, !((_global$FEATURES = global.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7) && {\n          kind: story.title,\n          story: story.name,\n          parameters: Object.assign({}, pick(story.parameters, allowedParameters), {\n            fileName: _this.storyIndex.stories[story.id].importPath\n          })\n        });\n      });\n      return {\n        v: 3,\n        stories: stories\n      };\n    };\n\n    this.globals = new GlobalsStore();\n    this.args = new ArgsStore();\n    this.hooks = {}; // We use a cache for these two functions for two reasons:\n    //  1. For performance\n    //  2. To ensure that when the same story is prepared with the same inputs you get the same output\n\n    this.processCSFFileWithCache = memoize(CSF_CACHE_SIZE)(processCSFFile);\n    this.prepareStoryWithCache = memoize(STORY_CACHE_SIZE)(prepareStory); // We cannot call `loadStory()` until we've been initialized properly. But we can wait for it.\n\n    this.initializationPromise = new SynchronousPromise(function (resolve) {\n      _this.resolveInitializationPromise = resolve;\n    });\n  }\n\n  _createClass(StoryStore, [{\n    key: \"setProjectAnnotations\",\n    value: function setProjectAnnotations(projectAnnotations) {\n      // By changing `this.projectAnnotations, we implicitly invalidate the `prepareStoryWithCache`\n      this.projectAnnotations = normalizeProjectAnnotations(projectAnnotations);\n      var globals = projectAnnotations.globals,\n          globalTypes = projectAnnotations.globalTypes;\n      this.globals.set({\n        globals: globals,\n        globalTypes: globalTypes\n      });\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize(_ref2) {\n      var storyIndex = _ref2.storyIndex,\n          importFn = _ref2.importFn,\n          _ref2$cache = _ref2.cache,\n          cache = _ref2$cache === void 0 ? false : _ref2$cache;\n      this.storyIndex = new StoryIndexStore(storyIndex);\n      this.importFn = importFn; // We don't need the cache to be loaded to call `loadStory`, we just need the index ready\n\n      this.resolveInitializationPromise();\n      return cache ? this.cacheAllCSFFiles() : SynchronousPromise.resolve();\n    } // This means that one of the CSF files has changed.\n    // If the `importFn` has changed, we will invalidate both caches.\n    // If the `storyIndex` data has changed, we may or may not invalidate the caches, depending\n    // on whether we've loaded the relevant files yet.\n\n  }, {\n    key: \"onStoriesChanged\",\n    value: function () {\n      var _onStoriesChanged = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref3) {\n        var importFn, storyIndex;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                importFn = _ref3.importFn, storyIndex = _ref3.storyIndex;\n                if (importFn) this.importFn = importFn;\n                if (storyIndex) this.storyIndex.stories = storyIndex.stories;\n\n                if (!this.cachedCSFFiles) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 6;\n                return this.cacheAllCSFFiles();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onStoriesChanged(_x) {\n        return _onStoriesChanged.apply(this, arguments);\n      }\n\n      return onStoriesChanged;\n    }() // To load a single CSF file to service a story we need to look up the importPath in the index\n\n  }, {\n    key: \"loadCSFFileByStoryId\",\n    value: function loadCSFFileByStoryId(storyId) {\n      var _this2 = this;\n\n      var _this$storyIndex$stor = this.storyIndex.storyIdToEntry(storyId),\n          importPath = _this$storyIndex$stor.importPath,\n          title = _this$storyIndex$stor.title;\n\n      return this.importFn(importPath).then(function (moduleExports) {\n        return (// We pass the title in here as it may have been generated by autoTitle on the server.\n          _this2.processCSFFileWithCache(moduleExports, importPath, title)\n        );\n      });\n    }\n  }, {\n    key: \"loadAllCSFFiles\",\n    value: function loadAllCSFFiles() {\n      var _this3 = this;\n\n      var importPaths = {};\n      Object.entries(this.storyIndex.stories).forEach(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n            storyId = _ref5[0],\n            importPath = _ref5[1].importPath;\n\n        importPaths[importPath] = storyId;\n      });\n      var csfFilePromiseList = Object.entries(importPaths).map(function (_ref6) {\n        var _ref7 = _slicedToArray(_ref6, 2),\n            importPath = _ref7[0],\n            storyId = _ref7[1];\n\n        return _this3.loadCSFFileByStoryId(storyId).then(function (csfFile) {\n          return {\n            importPath: importPath,\n            csfFile: csfFile\n          };\n        });\n      });\n      return SynchronousPromise.all(csfFilePromiseList).then(function (list) {\n        return list.reduce(function (acc, _ref8) {\n          var importPath = _ref8.importPath,\n              csfFile = _ref8.csfFile;\n          acc[importPath] = csfFile;\n          return acc;\n        }, {});\n      });\n    }\n  }, {\n    key: \"cacheAllCSFFiles\",\n    value: function cacheAllCSFFiles() {\n      var _this4 = this;\n\n      return this.initializationPromise.then(function () {\n        return _this4.loadAllCSFFiles().then(function (csfFiles) {\n          _this4.cachedCSFFiles = csfFiles;\n        });\n      });\n    } // Load the CSF file for a story and prepare the story from it and the project annotations.\n\n  }, {\n    key: \"loadStory\",\n    value: function () {\n      var _loadStory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref9) {\n        var storyId, csfFile;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                storyId = _ref9.storyId;\n                _context2.next = 3;\n                return this.initializationPromise;\n\n              case 3:\n                _context2.next = 5;\n                return this.loadCSFFileByStoryId(storyId);\n\n              case 5:\n                csfFile = _context2.sent;\n                return _context2.abrupt(\"return\", this.storyFromCSFFile({\n                  storyId: storyId,\n                  csfFile: csfFile\n                }));\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadStory(_x2) {\n        return _loadStory.apply(this, arguments);\n      }\n\n      return loadStory;\n    }() // This function is synchronous for convenience -- often times if you have a CSF file already\n    // it is easier not to have to await `loadStory`.\n\n  }, {\n    key: \"storyFromCSFFile\",\n    value: function storyFromCSFFile(_ref10) {\n      var storyId = _ref10.storyId,\n          csfFile = _ref10.csfFile;\n      var storyAnnotations = csfFile.stories[storyId];\n\n      if (!storyAnnotations) {\n        throw new Error(\"Didn't find '\".concat(storyId, \"' in CSF file, this is unexpected\"));\n      }\n\n      var componentAnnotations = csfFile.meta;\n      var story = this.prepareStoryWithCache(storyAnnotations, componentAnnotations, this.projectAnnotations);\n      this.args.setInitial(story);\n      this.hooks[story.id] = this.hooks[story.id] || new HooksContext();\n      return story;\n    } // If we have a CSF file we can get all the stories from it synchronously\n\n  }, {\n    key: \"componentStoriesFromCSFFile\",\n    value: function componentStoriesFromCSFFile(_ref11) {\n      var _this5 = this;\n\n      var csfFile = _ref11.csfFile;\n      return Object.keys(csfFile.stories).map(function (storyId) {\n        return _this5.storyFromCSFFile({\n          storyId: storyId,\n          csfFile: csfFile\n        });\n      });\n    } // A prepared story does not include args, globals or hooks. These are stored in the story store\n    // and updated separtely to the (immutable) story.\n\n  }, {\n    key: \"getStoryContext\",\n    value: function getStoryContext(story) {\n      return Object.assign({}, story, {\n        args: this.args.get(story.id),\n        globals: this.globals.get(),\n        hooks: this.hooks[story.id]\n      });\n    }\n  }, {\n    key: \"cleanupStory\",\n    value: function cleanupStory(story) {\n      this.hooks[story.id].clean();\n    }\n  }, {\n    key: \"extract\",\n    value: function extract() {\n      var _this6 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeDocsOnly: false\n      };\n\n      if (!this.cachedCSFFiles) {\n        throw new Error('Cannot call extract() unless you call cacheAllCSFFiles() first.');\n      }\n\n      return Object.entries(this.storyIndex.stories).reduce(function (acc, _ref12) {\n        var _ref13 = _slicedToArray(_ref12, 2),\n            storyId = _ref13[0],\n            importPath = _ref13[1].importPath;\n\n        var csfFile = _this6.cachedCSFFiles[importPath];\n\n        var story = _this6.storyFromCSFFile({\n          storyId: storyId,\n          csfFile: csfFile\n        });\n\n        if (!options.includeDocsOnly && story.parameters.docsOnly) {\n          return acc;\n        }\n\n        acc[storyId] = Object.entries(story).reduce(function (storyAcc, _ref14) {\n          var _ref15 = _slicedToArray(_ref14, 2),\n              key = _ref15[0],\n              value = _ref15[1];\n\n          if (typeof value === 'function') {\n            return storyAcc;\n          }\n\n          if (Array.isArray(value)) {\n            return Object.assign(storyAcc, _defineProperty({}, key, value.slice().sort()));\n          }\n\n          return Object.assign(storyAcc, _defineProperty({}, key, value));\n        }, {\n          args: story.initialArgs\n        });\n        return acc;\n      }, {});\n    }\n  }, {\n    key: \"getSetStoriesPayload\",\n    value: function getSetStoriesPayload() {\n      var stories = this.extract({\n        includeDocsOnly: true\n      });\n      var kindParameters = Object.values(stories).reduce(function (acc, _ref16) {\n        var title = _ref16.title;\n        acc[title] = {};\n        return acc;\n      }, {});\n      return {\n        v: 2,\n        globals: this.globals.get(),\n        globalParameters: {},\n        kindParameters: kindParameters,\n        stories: stories\n      };\n    }\n  }, {\n    key: \"raw\",\n    value: function raw() {\n      var _this7 = this;\n\n      return Object.values(this.extract()).map(function (_ref17) {\n        var id = _ref17.id;\n        return _this7.fromId(id);\n      });\n    }\n  }, {\n    key: \"fromId\",\n    value: function fromId(storyId) {\n      var _this8 = this;\n\n      if (!this.cachedCSFFiles) {\n        throw new Error('Cannot call fromId/raw() unless you call cacheAllCSFFiles() first.');\n      }\n\n      var importPath;\n\n      try {\n        var _this$storyIndex$stor2 = this.storyIndex.storyIdToEntry(storyId);\n\n        importPath = _this$storyIndex$stor2.importPath;\n      } catch (err) {\n        return null;\n      }\n\n      var csfFile = this.cachedCSFFiles[importPath];\n      var story = this.storyFromCSFFile({\n        storyId: storyId,\n        csfFile: csfFile\n      });\n      return Object.assign({}, story, {\n        storyFn: function storyFn(update) {\n          var context = Object.assign({}, _this8.getStoryContext(story), {\n            viewMode: 'story'\n          });\n          return story.unboundStoryFn(Object.assign({}, context, update));\n        }\n      });\n    }\n  }]);\n\n  return StoryStore;\n}();","map":{"version":3,"sources":["F:/work/Cegedim Hackathon 2022/patient-management-system/patient-management-system-angular/node_modules/@storybook/store/dist/esm/StoryStore.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","length","err","Array","isArray","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","prototype","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","from","test","iter","len","arr2","_objectWithoutProperties","source","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","memoize","mapValues","pick","global","SynchronousPromise","StoryIndexStore","ArgsStore","GlobalsStore","processCSFFile","prepareStory","HooksContext","normalizeInputTypes","inferArgTypes","inferControls","CSF_CACHE_SIZE","STORY_CACHE_SIZE","normalizeProjectAnnotations","_ref","argTypes","globalTypes","argTypesEnhancers","annotations","assign","concat","StoryStore","_this","storyIndex","importFn","projectAnnotations","globals","hooks","cachedCSFFiles","processCSFFileWithCache","prepareStoryWithCache","initializationPromise","resolveInitializationPromise","getStoriesJsonData","getSetStoriesPayload","allowedParameters","stories","story","_global$FEATURES","importPath","id","FEATURES","breakingChangesV7","kind","title","parameters","fileName","v","setProjectAnnotations","set","initialize","_ref2","_ref2$cache","cache","cacheAllCSFFiles","_onStoriesChanged","mark","_callee","_ref3","wrap","_callee$","_context","prev","stop","onStoriesChanged","_x","loadCSFFileByStoryId","storyId","_this2","_this$storyIndex$stor","storyIdToEntry","moduleExports","loadAllCSFFiles","_this3","importPaths","entries","forEach","_ref4","_ref5","csfFilePromiseList","map","_ref6","_ref7","csfFile","all","list","reduce","acc","_ref8","_this4","csfFiles","_loadStory","_callee2","_ref9","_callee2$","_context2","sent","abrupt","storyFromCSFFile","loadStory","_x2","_ref10","storyAnnotations","Error","componentAnnotations","meta","setInitial","componentStoriesFromCSFFile","_ref11","_this5","getStoryContext","get","cleanupStory","clean","extract","_this6","options","includeDocsOnly","_ref12","_ref13","docsOnly","storyAcc","_ref14","_ref15","sort","initialArgs","kindParameters","values","_ref16","globalParameters","raw","_this7","_ref17","fromId","_this8","_this$storyIndex$stor2","storyFn","update","context","viewMode","unboundStoryFn"],"mappings":";;AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;;AAEjN,SAASQ,cAAT,CAAwBC,GAAxB,EAA6BC,CAA7B,EAAgC;AAAE,SAAOC,eAAe,CAACF,GAAD,CAAf,IAAwBG,qBAAqB,CAACH,GAAD,EAAMC,CAAN,CAA7C,IAAyDG,2BAA2B,CAACJ,GAAD,EAAMC,CAAN,CAApF,IAAgGI,gBAAgB,EAAvH;AAA4H;;AAE9J,SAASA,gBAAT,GAA4B;AAAE,QAAM,IAAIC,SAAJ,CAAc,2IAAd,CAAN;AAAmK;;AAEjM,SAASH,qBAAT,CAA+BH,GAA/B,EAAoCC,CAApC,EAAuC;AAAE,MAAI,OAAOM,MAAP,KAAkB,WAAlB,IAAiC,EAAEA,MAAM,CAACC,QAAP,IAAmBd,MAAM,CAACM,GAAD,CAA3B,CAArC,EAAwE;AAAQ,MAAIS,IAAI,GAAG,EAAX;AAAe,MAAIC,EAAE,GAAG,IAAT;AAAe,MAAIC,EAAE,GAAG,KAAT;AAAgB,MAAIC,EAAE,GAAGC,SAAT;;AAAoB,MAAI;AAAE,SAAK,IAAIC,EAAE,GAAGd,GAAG,CAACO,MAAM,CAACC,QAAR,CAAH,EAAT,EAAiCO,EAAtC,EAA0C,EAAEL,EAAE,GAAG,CAACK,EAAE,GAAGD,EAAE,CAACE,IAAH,EAAN,EAAiBC,IAAxB,CAA1C,EAAyEP,EAAE,GAAG,IAA9E,EAAoF;AAAED,MAAAA,IAAI,CAACS,IAAL,CAAUH,EAAE,CAACtB,KAAb;;AAAqB,UAAIQ,CAAC,IAAIQ,IAAI,CAACU,MAAL,KAAgBlB,CAAzB,EAA4B;AAAQ;AAAE,GAAvJ,CAAwJ,OAAOmB,GAAP,EAAY;AAAET,IAAAA,EAAE,GAAG,IAAL;AAAWC,IAAAA,EAAE,GAAGQ,GAAL;AAAW,GAA5L,SAAqM;AAAE,QAAI;AAAE,UAAI,CAACV,EAAD,IAAOI,EAAE,CAAC,QAAD,CAAF,IAAgB,IAA3B,EAAiCA,EAAE,CAAC,QAAD,CAAF;AAAiB,KAAxD,SAAiE;AAAE,UAAIH,EAAJ,EAAQ,MAAMC,EAAN;AAAW;AAAE;;AAAC,SAAOH,IAAP;AAAc;;AAEze,SAASP,eAAT,CAAyBF,GAAzB,EAA8B;AAAE,MAAIqB,KAAK,CAACC,OAAN,CAActB,GAAd,CAAJ,EAAwB,OAAOA,GAAP;AAAa;;AAErE,OAAO,gCAAP;;AAEA,SAASuB,kBAAT,CAA4BC,GAA5B,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAkDC,KAAlD,EAAyDC,MAAzD,EAAiEpC,GAAjE,EAAsEqC,GAAtE,EAA2E;AAAE,MAAI;AAAE,QAAIC,IAAI,GAAGN,GAAG,CAAChC,GAAD,CAAH,CAASqC,GAAT,CAAX;AAA0B,QAAIpC,KAAK,GAAGqC,IAAI,CAACrC,KAAjB;AAAyB,GAAzD,CAA0D,OAAOsC,KAAP,EAAc;AAAEL,IAAAA,MAAM,CAACK,KAAD,CAAN;AAAe;AAAS;;AAAC,MAAID,IAAI,CAACb,IAAT,EAAe;AAAEQ,IAAAA,OAAO,CAAChC,KAAD,CAAP;AAAiB,GAAlC,MAAwC;AAAEuC,IAAAA,OAAO,CAACP,OAAR,CAAgBhC,KAAhB,EAAuBwC,IAAvB,CAA4BN,KAA5B,EAAmCC,MAAnC;AAA6C;AAAE;;AAEzQ,SAASM,iBAAT,CAA2BC,EAA3B,EAA+B;AAAE,SAAO,YAAY;AAAE,QAAIC,IAAI,GAAG,IAAX;AAAA,QAAiBC,IAAI,GAAGC,SAAxB;AAAmC,WAAO,IAAIN,OAAJ,CAAY,UAAUP,OAAV,EAAmBC,MAAnB,EAA2B;AAAE,UAAIF,GAAG,GAAGW,EAAE,CAACI,KAAH,CAASH,IAAT,EAAeC,IAAf,CAAV;;AAAgC,eAASV,KAAT,CAAelC,KAAf,EAAsB;AAAE8B,QAAAA,kBAAkB,CAACC,GAAD,EAAMC,OAAN,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC,MAAtC,EAA8CnC,KAA9C,CAAlB;AAAyE;;AAAC,eAASmC,MAAT,CAAgBR,GAAhB,EAAqB;AAAEG,QAAAA,kBAAkB,CAACC,GAAD,EAAMC,OAAN,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC,OAAtC,EAA+CR,GAA/C,CAAlB;AAAwE;;AAACO,MAAAA,KAAK,CAACd,SAAD,CAAL;AAAmB,KAA9R,CAAP;AAAyS,GAAjW;AAAoW;;AAErY,SAAS2B,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIpC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASqC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AAAE,OAAK,IAAI5C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4C,KAAK,CAAC1B,MAA1B,EAAkClB,CAAC,EAAnC,EAAuC;AAAE,QAAI6C,UAAU,GAAGD,KAAK,CAAC5C,CAAD,CAAtB;AAA2B6C,IAAAA,UAAU,CAAClD,UAAX,GAAwBkD,UAAU,CAAClD,UAAX,IAAyB,KAAjD;AAAwDkD,IAAAA,UAAU,CAACjD,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWiD,UAAf,EAA2BA,UAAU,CAAChD,QAAX,GAAsB,IAAtB;AAA4BJ,IAAAA,MAAM,CAACC,cAAP,CAAsBiD,MAAtB,EAA8BE,UAAU,CAACtD,GAAzC,EAA8CsD,UAA9C;AAA4D;AAAE;;AAE7T,SAASC,YAAT,CAAsBL,WAAtB,EAAmCM,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBL,iBAAiB,CAACD,WAAW,CAACQ,SAAb,EAAwBF,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBN,iBAAiB,CAACD,WAAD,EAAcO,WAAd,CAAjB;AAA6C,SAAOP,WAAP;AAAqB;;AAEvN,SAASS,kBAAT,CAA4BnD,GAA5B,EAAiC;AAAE,SAAOoD,kBAAkB,CAACpD,GAAD,CAAlB,IAA2BqD,gBAAgB,CAACrD,GAAD,CAA3C,IAAoDI,2BAA2B,CAACJ,GAAD,CAA/E,IAAwFsD,kBAAkB,EAAjH;AAAsH;;AAEzJ,SAASA,kBAAT,GAA8B;AAAE,QAAM,IAAIhD,SAAJ,CAAc,sIAAd,CAAN;AAA8J;;AAE9L,SAASF,2BAAT,CAAqCmD,CAArC,EAAwCC,MAAxC,EAAgD;AAAE,MAAI,CAACD,CAAL,EAAQ;AAAQ,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAOE,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAqC,MAAIE,CAAC,GAAGhE,MAAM,CAACwD,SAAP,CAAiBS,QAAjB,CAA0BC,IAA1B,CAA+BL,CAA/B,EAAkCM,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;AAAwD,MAAIH,CAAC,KAAK,QAAN,IAAkBH,CAAC,CAACO,WAAxB,EAAqCJ,CAAC,GAAGH,CAAC,CAACO,WAAF,CAAcC,IAAlB;AAAwB,MAAIL,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAOrC,KAAK,CAAC2C,IAAN,CAAWT,CAAX,CAAP;AAAsB,MAAIG,CAAC,KAAK,WAAN,IAAqB,2CAA2CO,IAA3C,CAAgDP,CAAhD,CAAzB,EAA6E,OAAOD,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAsC;;AAEha,SAASH,gBAAT,CAA0Ba,IAA1B,EAAgC;AAAE,MAAI,OAAO3D,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAAP,IAAmBd,MAAM,CAACwE,IAAD,CAA9D,EAAsE,OAAO7C,KAAK,CAAC2C,IAAN,CAAWE,IAAX,CAAP;AAA0B;;AAElI,SAASd,kBAAT,CAA4BpD,GAA5B,EAAiC;AAAE,MAAIqB,KAAK,CAACC,OAAN,CAActB,GAAd,CAAJ,EAAwB,OAAOyD,iBAAiB,CAACzD,GAAD,CAAxB;AAAgC;;AAE3F,SAASyD,iBAAT,CAA2BzD,GAA3B,EAAgCmE,GAAhC,EAAqC;AAAE,MAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGnE,GAAG,CAACmB,MAA7B,EAAqCgD,GAAG,GAAGnE,GAAG,CAACmB,MAAV;;AAAkB,OAAK,IAAIlB,CAAC,GAAG,CAAR,EAAWmE,IAAI,GAAG,IAAI/C,KAAJ,CAAU8C,GAAV,CAAvB,EAAuClE,CAAC,GAAGkE,GAA3C,EAAgDlE,CAAC,EAAjD,EAAqD;AAAEmE,IAAAA,IAAI,CAACnE,CAAD,CAAJ,GAAUD,GAAG,CAACC,CAAD,CAAb;AAAmB;;AAAC,SAAOmE,IAAP;AAAc;;AAEvL,OAAO,qCAAP;AACA,OAAO,oCAAP;AACA,OAAO,qCAAP;AACA,OAAO,iDAAP;AACA,OAAO,sCAAP;AACA,OAAO,iCAAP;AACA,OAAO,mCAAP;AACA,OAAO,mCAAP;AACA,OAAO,qCAAP;AACA,OAAO,8BAAP;AACA,OAAO,0CAAP;AACA,OAAO,wCAAP;AACA,OAAO,uCAAP;AACA,OAAO,uCAAP;AACA,OAAO,sCAAP;AACA,OAAO,iDAAP;AACA,OAAO,kCAAP;AACA,OAAO,+BAAP;;AAEA,SAASC,wBAAT,CAAkCC,MAAlC,EAA0CC,QAA1C,EAAoD;AAAE,MAAID,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;;AAAW,MAAI1B,MAAM,GAAG4B,6BAA6B,CAACF,MAAD,EAASC,QAAT,CAA1C;;AAA8D,MAAI/E,GAAJ,EAASS,CAAT;;AAAY,MAAIP,MAAM,CAAC+E,qBAAX,EAAkC;AAAE,QAAIC,gBAAgB,GAAGhF,MAAM,CAAC+E,qBAAP,CAA6BH,MAA7B,CAAvB;;AAA6D,SAAKrE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyE,gBAAgB,CAACvD,MAAjC,EAAyClB,CAAC,EAA1C,EAA8C;AAAET,MAAAA,GAAG,GAAGkF,gBAAgB,CAACzE,CAAD,CAAtB;AAA2B,UAAIsE,QAAQ,CAACI,OAAT,CAAiBnF,GAAjB,KAAyB,CAA7B,EAAgC;AAAU,UAAI,CAACE,MAAM,CAACwD,SAAP,CAAiB0B,oBAAjB,CAAsChB,IAAtC,CAA2CU,MAA3C,EAAmD9E,GAAnD,CAAL,EAA8D;AAAUoD,MAAAA,MAAM,CAACpD,GAAD,CAAN,GAAc8E,MAAM,CAAC9E,GAAD,CAApB;AAA4B;AAAE;;AAAC,SAAOoD,MAAP;AAAgB;;AAE5e,SAAS4B,6BAAT,CAAuCF,MAAvC,EAA+CC,QAA/C,EAAyD;AAAE,MAAID,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AAAW,MAAI1B,MAAM,GAAG,EAAb;AAAiB,MAAIiC,UAAU,GAAGnF,MAAM,CAACoF,IAAP,CAAYR,MAAZ,CAAjB;AAAsC,MAAI9E,GAAJ,EAASS,CAAT;;AAAY,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4E,UAAU,CAAC1D,MAA3B,EAAmClB,CAAC,EAApC,EAAwC;AAAET,IAAAA,GAAG,GAAGqF,UAAU,CAAC5E,CAAD,CAAhB;AAAqB,QAAIsE,QAAQ,CAACI,OAAT,CAAiBnF,GAAjB,KAAyB,CAA7B,EAAgC;AAAUoD,IAAAA,MAAM,CAACpD,GAAD,CAAN,GAAc8E,MAAM,CAAC9E,GAAD,CAApB;AAA4B;;AAAC,SAAOoD,MAAP;AAAgB;;AAEnT,OAAOmC,OAAP,MAAoB,cAApB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B,C,CAAiD;;AAEjD,IAAIC,cAAc,GAAG,IAArB;AACA,IAAIC,gBAAgB,GAAG,KAAvB;;AAEA,SAASC,2BAAT,CAAqCC,IAArC,EAA2C;AACzC,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIC,WAAW,GAAGF,IAAI,CAACE,WADvB;AAAA,MAEIC,iBAAiB,GAAGH,IAAI,CAACG,iBAF7B;AAAA,MAGIC,WAAW,GAAG/B,wBAAwB,CAAC2B,IAAD,EAAO,CAAC,UAAD,EAAa,aAAb,EAA4B,mBAA5B,CAAP,CAH1C;;AAKA,SAAOtG,MAAM,CAAC2G,MAAP,CAAc,EAAd,EAAkBJ,QAAQ,IAAI;AACnCA,IAAAA,QAAQ,EAAEP,mBAAmB,CAACO,QAAD;AADM,GAA9B,EAEJC,WAAW,IAAI;AAChBA,IAAAA,WAAW,EAAER,mBAAmB,CAACQ,WAAD;AADhB,GAFX,EAIJ;AACDC,IAAAA,iBAAiB,EAAE,GAAGG,MAAH,CAAUnD,kBAAkB,CAACgD,iBAAiB,IAAI,EAAtB,CAA5B,EAAuD,CAACR,aAAD,EAAgB;AAC1F;AACA;AACA;AACAC,IAAAA,aAJ0E,CAAvD;AADlB,GAJI,EAUJQ,WAVI,CAAP;AAWD;;AAED,OAAO,IAAIG,UAAU,GAAG,aAAa,YAAY;AAC/C,WAASA,UAAT,GAAsB;AACpB,QAAIC,KAAK,GAAG,IAAZ;;AAEAhE,IAAAA,eAAe,CAAC,IAAD,EAAO+D,UAAP,CAAf;;AAEA,SAAKE,UAAL,GAAkB,KAAK,CAAvB;AACA,SAAKC,QAAL,GAAgB,KAAK,CAArB;AACA,SAAKC,kBAAL,GAA0B,KAAK,CAA/B;AACA,SAAKC,OAAL,GAAe,KAAK,CAApB;AACA,SAAKvE,IAAL,GAAY,KAAK,CAAjB;AACA,SAAKwE,KAAL,GAAa,KAAK,CAAlB;AACA,SAAKC,cAAL,GAAsB,KAAK,CAA3B;AACA,SAAKC,uBAAL,GAA+B,KAAK,CAApC;AACA,SAAKC,qBAAL,GAA6B,KAAK,CAAlC;AACA,SAAKC,qBAAL,GAA6B,KAAK,CAAlC;AACA,SAAKC,4BAAL,GAAoC,KAAK,CAAzC;;AAEA,SAAKC,kBAAL,GAA0B,YAAY;AACpC,UAAI1H,KAAK,GAAG+G,KAAK,CAACY,oBAAN,EAAZ;;AAEA,UAAIC,iBAAiB,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,WAAzB,EAAsC,MAAtC,EAA8C,eAA9C,CAAxB;AACA,UAAIC,OAAO,GAAGtC,SAAS,CAACvF,KAAK,CAAC6H,OAAP,EAAgB,UAAUC,KAAV,EAAiB;AACtD,YAAIC,gBAAJ;;AAEA,eAAO9H,MAAM,CAAC2G,MAAP,CAAc,EAAd,EAAkBpB,IAAI,CAACsC,KAAD,EAAQ,CAAC,IAAD,EAAO,MAAP,EAAe,OAAf,CAAR,CAAtB,EAAwD;AAC7DE,UAAAA,UAAU,EAAEjB,KAAK,CAACC,UAAN,CAAiBa,OAAjB,CAAyBC,KAAK,CAACG,EAA/B,EAAmCD;AADc,SAAxD,EAEJ,EAAE,CAACD,gBAAgB,GAAGtC,MAAM,CAACyC,QAA3B,MAAyC,IAAzC,IAAiDH,gBAAgB,KAAK,KAAK,CAA3E,IAAgFA,gBAAgB,CAACI,iBAAnG,KAAyH;AAC1HC,UAAAA,IAAI,EAAEN,KAAK,CAACO,KAD8G;AAE1HP,UAAAA,KAAK,EAAEA,KAAK,CAACxD,IAF6G;AAG1HgE,UAAAA,UAAU,EAAErI,MAAM,CAAC2G,MAAP,CAAc,EAAd,EAAkBpB,IAAI,CAACsC,KAAK,CAACQ,UAAP,EAAmBV,iBAAnB,CAAtB,EAA6D;AACvEW,YAAAA,QAAQ,EAAExB,KAAK,CAACC,UAAN,CAAiBa,OAAjB,CAAyBC,KAAK,CAACG,EAA/B,EAAmCD;AAD0B,WAA7D;AAH8G,SAFrH,CAAP;AASD,OAZsB,CAAvB;AAaA,aAAO;AACLQ,QAAAA,CAAC,EAAE,CADE;AAELX,QAAAA,OAAO,EAAEA;AAFJ,OAAP;AAID,KArBD;;AAuBA,SAAKV,OAAL,GAAe,IAAItB,YAAJ,EAAf;AACA,SAAKjD,IAAL,GAAY,IAAIgD,SAAJ,EAAZ;AACA,SAAKwB,KAAL,GAAa,EAAb,CA1CoB,CA0CH;AACjB;AACA;;AAEA,SAAKE,uBAAL,GAA+BhC,OAAO,CAACc,cAAD,CAAP,CAAwBN,cAAxB,CAA/B;AACA,SAAKyB,qBAAL,GAA6BjC,OAAO,CAACe,gBAAD,CAAP,CAA0BN,YAA1B,CAA7B,CA/CoB,CA+CkD;;AAEtE,SAAKyB,qBAAL,GAA6B,IAAI9B,kBAAJ,CAAuB,UAAU1D,OAAV,EAAmB;AACrE+E,MAAAA,KAAK,CAACU,4BAAN,GAAqCzF,OAArC;AACD,KAF4B,CAA7B;AAGD;;AAEDsB,EAAAA,YAAY,CAACwD,UAAD,EAAa,CAAC;AACxB/G,IAAAA,GAAG,EAAE,uBADmB;AAExBC,IAAAA,KAAK,EAAE,SAASyI,qBAAT,CAA+BvB,kBAA/B,EAAmD;AACxD;AACA,WAAKA,kBAAL,GAA0BZ,2BAA2B,CAACY,kBAAD,CAArD;AACA,UAAIC,OAAO,GAAGD,kBAAkB,CAACC,OAAjC;AAAA,UACIV,WAAW,GAAGS,kBAAkB,CAACT,WADrC;AAEA,WAAKU,OAAL,CAAauB,GAAb,CAAiB;AACfvB,QAAAA,OAAO,EAAEA,OADM;AAEfV,QAAAA,WAAW,EAAEA;AAFE,OAAjB;AAID;AAXuB,GAAD,EAYtB;AACD1G,IAAAA,GAAG,EAAE,YADJ;AAEDC,IAAAA,KAAK,EAAE,SAAS2I,UAAT,CAAoBC,KAApB,EAA2B;AAChC,UAAI5B,UAAU,GAAG4B,KAAK,CAAC5B,UAAvB;AAAA,UACIC,QAAQ,GAAG2B,KAAK,CAAC3B,QADrB;AAAA,UAEI4B,WAAW,GAAGD,KAAK,CAACE,KAFxB;AAAA,UAGIA,KAAK,GAAGD,WAAW,KAAK,KAAK,CAArB,GAAyB,KAAzB,GAAiCA,WAH7C;AAIA,WAAK7B,UAAL,GAAkB,IAAIrB,eAAJ,CAAoBqB,UAApB,CAAlB;AACA,WAAKC,QAAL,GAAgBA,QAAhB,CANgC,CAMN;;AAE1B,WAAKQ,4BAAL;AACA,aAAOqB,KAAK,GAAG,KAAKC,gBAAL,EAAH,GAA6BrD,kBAAkB,CAAC1D,OAAnB,EAAzC;AACD,KAZA,CAYC;AACF;AACA;AACA;;AAfC,GAZsB,EA6BtB;AACDjC,IAAAA,GAAG,EAAE,kBADJ;AAEDC,IAAAA,KAAK,EAAE,YAAY;AACjB,UAAIgJ,iBAAiB,GAAGvG,iBAAiB,EAAE,aAAa,oBAAmBwG,IAAnB,CAAwB,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtG,YAAIlC,QAAJ,EAAcD,UAAd;AACA,eAAO,oBAAmBoC,IAAnB,CAAwB,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AACzD,iBAAO,CAAP,EAAU;AACR,oBAAQA,QAAQ,CAACC,IAAT,GAAgBD,QAAQ,CAAC/H,IAAjC;AACE,mBAAK,CAAL;AACE0F,gBAAAA,QAAQ,GAAGkC,KAAK,CAAClC,QAAjB,EAA2BD,UAAU,GAAGmC,KAAK,CAACnC,UAA9C;AACA,oBAAIC,QAAJ,EAAc,KAAKA,QAAL,GAAgBA,QAAhB;AACd,oBAAID,UAAJ,EAAgB,KAAKA,UAAL,CAAgBa,OAAhB,GAA0Bb,UAAU,CAACa,OAArC;;AAEhB,oBAAI,CAAC,KAAKR,cAAV,EAA0B;AACxBiC,kBAAAA,QAAQ,CAAC/H,IAAT,GAAgB,CAAhB;AACA;AACD;;AAED+H,gBAAAA,QAAQ,CAAC/H,IAAT,GAAgB,CAAhB;AACA,uBAAO,KAAKwH,gBAAL,EAAP;;AAEF,mBAAK,CAAL;AACA,mBAAK,KAAL;AACE,uBAAOO,QAAQ,CAACE,IAAT,EAAP;AAhBJ;AAkBD;AACF,SArBM,EAqBJN,OArBI,EAqBK,IArBL,CAAP;AAsBD,OAxBuD,CAAf,CAAzC;;AA0BA,eAASO,gBAAT,CAA0BC,EAA1B,EAA8B;AAC5B,eAAOV,iBAAiB,CAAClG,KAAlB,CAAwB,IAAxB,EAA8BD,SAA9B,CAAP;AACD;;AAED,aAAO4G,gBAAP;AACD,KAhCM,EAFN,CAkCG;;AAlCH,GA7BsB,EAiEtB;AACD1J,IAAAA,GAAG,EAAE,sBADJ;AAEDC,IAAAA,KAAK,EAAE,SAAS2J,oBAAT,CAA8BC,OAA9B,EAAuC;AAC5C,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAIC,qBAAqB,GAAG,KAAK9C,UAAL,CAAgB+C,cAAhB,CAA+BH,OAA/B,CAA5B;AAAA,UACI5B,UAAU,GAAG8B,qBAAqB,CAAC9B,UADvC;AAAA,UAEIK,KAAK,GAAGyB,qBAAqB,CAACzB,KAFlC;;AAIA,aAAO,KAAKpB,QAAL,CAAce,UAAd,EAA0BxF,IAA1B,CAA+B,UAAUwH,aAAV,EAAyB;AAC7D,eAAQ;AACNH,UAAAA,MAAM,CAACvC,uBAAP,CAA+B0C,aAA/B,EAA8ChC,UAA9C,EAA0DK,KAA1D;AADF;AAGD,OAJM,CAAP;AAKD;AAdA,GAjEsB,EAgFtB;AACDtI,IAAAA,GAAG,EAAE,iBADJ;AAEDC,IAAAA,KAAK,EAAE,SAASiK,eAAT,GAA2B;AAChC,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAIC,WAAW,GAAG,EAAlB;AACAlK,MAAAA,MAAM,CAACmK,OAAP,CAAe,KAAKpD,UAAL,CAAgBa,OAA/B,EAAwCwC,OAAxC,CAAgD,UAAUC,KAAV,EAAiB;AAC/D,YAAIC,KAAK,GAAGjK,cAAc,CAACgK,KAAD,EAAQ,CAAR,CAA1B;AAAA,YACIV,OAAO,GAAGW,KAAK,CAAC,CAAD,CADnB;AAAA,YAEIvC,UAAU,GAAGuC,KAAK,CAAC,CAAD,CAAL,CAASvC,UAF1B;;AAIAmC,QAAAA,WAAW,CAACnC,UAAD,CAAX,GAA0B4B,OAA1B;AACD,OAND;AAOA,UAAIY,kBAAkB,GAAGvK,MAAM,CAACmK,OAAP,CAAeD,WAAf,EAA4BM,GAA5B,CAAgC,UAAUC,KAAV,EAAiB;AACxE,YAAIC,KAAK,GAAGrK,cAAc,CAACoK,KAAD,EAAQ,CAAR,CAA1B;AAAA,YACI1C,UAAU,GAAG2C,KAAK,CAAC,CAAD,CADtB;AAAA,YAEIf,OAAO,GAAGe,KAAK,CAAC,CAAD,CAFnB;;AAIA,eAAOT,MAAM,CAACP,oBAAP,CAA4BC,OAA5B,EAAqCpH,IAArC,CAA0C,UAAUoI,OAAV,EAAmB;AAClE,iBAAO;AACL5C,YAAAA,UAAU,EAAEA,UADP;AAEL4C,YAAAA,OAAO,EAAEA;AAFJ,WAAP;AAID,SALM,CAAP;AAMD,OAXwB,CAAzB;AAYA,aAAOlF,kBAAkB,CAACmF,GAAnB,CAAuBL,kBAAvB,EAA2ChI,IAA3C,CAAgD,UAAUsI,IAAV,EAAgB;AACrE,eAAOA,IAAI,CAACC,MAAL,CAAY,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACvC,cAAIjD,UAAU,GAAGiD,KAAK,CAACjD,UAAvB;AAAA,cACI4C,OAAO,GAAGK,KAAK,CAACL,OADpB;AAEAI,UAAAA,GAAG,CAAChD,UAAD,CAAH,GAAkB4C,OAAlB;AACA,iBAAOI,GAAP;AACD,SALM,EAKJ,EALI,CAAP;AAMD,OAPM,CAAP;AAQD;AAjCA,GAhFsB,EAkHtB;AACDjL,IAAAA,GAAG,EAAE,kBADJ;AAEDC,IAAAA,KAAK,EAAE,SAAS+I,gBAAT,GAA4B;AACjC,UAAImC,MAAM,GAAG,IAAb;;AAEA,aAAO,KAAK1D,qBAAL,CAA2BhF,IAA3B,CAAgC,YAAY;AACjD,eAAO0I,MAAM,CAACjB,eAAP,GAAyBzH,IAAzB,CAA8B,UAAU2I,QAAV,EAAoB;AACvDD,UAAAA,MAAM,CAAC7D,cAAP,GAAwB8D,QAAxB;AACD,SAFM,CAAP;AAGD,OAJM,CAAP;AAKD,KAVA,CAUC;;AAVD,GAlHsB,EA8HtB;AACDpL,IAAAA,GAAG,EAAE,WADJ;AAEDC,IAAAA,KAAK,EAAE,YAAY;AACjB,UAAIoL,UAAU,GAAG3I,iBAAiB,EAAE,aAAa,oBAAmBwG,IAAnB,CAAwB,SAASoC,QAAT,CAAkBC,KAAlB,EAAyB;AAChG,YAAI1B,OAAJ,EAAagB,OAAb;AACA,eAAO,oBAAmBxB,IAAnB,CAAwB,SAASmC,SAAT,CAAmBC,SAAnB,EAA8B;AAC3D,iBAAO,CAAP,EAAU;AACR,oBAAQA,SAAS,CAACjC,IAAV,GAAiBiC,SAAS,CAACjK,IAAnC;AACE,mBAAK,CAAL;AACEqI,gBAAAA,OAAO,GAAG0B,KAAK,CAAC1B,OAAhB;AACA4B,gBAAAA,SAAS,CAACjK,IAAV,GAAiB,CAAjB;AACA,uBAAO,KAAKiG,qBAAZ;;AAEF,mBAAK,CAAL;AACEgE,gBAAAA,SAAS,CAACjK,IAAV,GAAiB,CAAjB;AACA,uBAAO,KAAKoI,oBAAL,CAA0BC,OAA1B,CAAP;;AAEF,mBAAK,CAAL;AACEgB,gBAAAA,OAAO,GAAGY,SAAS,CAACC,IAApB;AACA,uBAAOD,SAAS,CAACE,MAAV,CAAiB,QAAjB,EAA2B,KAAKC,gBAAL,CAAsB;AACtD/B,kBAAAA,OAAO,EAAEA,OAD6C;AAEtDgB,kBAAAA,OAAO,EAAEA;AAF6C,iBAAtB,CAA3B,CAAP;;AAKF,mBAAK,CAAL;AACA,mBAAK,KAAL;AACE,uBAAOY,SAAS,CAAChC,IAAV,EAAP;AAnBJ;AAqBD;AACF,SAxBM,EAwBJ6B,QAxBI,EAwBM,IAxBN,CAAP;AAyBD,OA3BgD,CAAf,CAAlC;;AA6BA,eAASO,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,eAAOT,UAAU,CAACtI,KAAX,CAAiB,IAAjB,EAAuBD,SAAvB,CAAP;AACD;;AAED,aAAO+I,SAAP;AACD,KAnCM,EAFN,CAqCG;AACJ;;AAtCC,GA9HsB,EAsKtB;AACD7L,IAAAA,GAAG,EAAE,kBADJ;AAEDC,IAAAA,KAAK,EAAE,SAAS2L,gBAAT,CAA0BG,MAA1B,EAAkC;AACvC,UAAIlC,OAAO,GAAGkC,MAAM,CAAClC,OAArB;AAAA,UACIgB,OAAO,GAAGkB,MAAM,CAAClB,OADrB;AAEA,UAAImB,gBAAgB,GAAGnB,OAAO,CAAC/C,OAAR,CAAgB+B,OAAhB,CAAvB;;AAEA,UAAI,CAACmC,gBAAL,EAAuB;AACrB,cAAM,IAAIC,KAAJ,CAAU,gBAAgBnF,MAAhB,CAAuB+C,OAAvB,EAAgC,mCAAhC,CAAV,CAAN;AACD;;AAED,UAAIqC,oBAAoB,GAAGrB,OAAO,CAACsB,IAAnC;AACA,UAAIpE,KAAK,GAAG,KAAKP,qBAAL,CAA2BwE,gBAA3B,EAA6CE,oBAA7C,EAAmE,KAAK/E,kBAAxE,CAAZ;AACA,WAAKtE,IAAL,CAAUuJ,UAAV,CAAqBrE,KAArB;AACA,WAAKV,KAAL,CAAWU,KAAK,CAACG,EAAjB,IAAuB,KAAKb,KAAL,CAAWU,KAAK,CAACG,EAAjB,KAAwB,IAAIjC,YAAJ,EAA/C;AACA,aAAO8B,KAAP;AACD,KAhBA,CAgBC;;AAhBD,GAtKsB,EAwLtB;AACD/H,IAAAA,GAAG,EAAE,6BADJ;AAEDC,IAAAA,KAAK,EAAE,SAASoM,2BAAT,CAAqCC,MAArC,EAA6C;AAClD,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAI1B,OAAO,GAAGyB,MAAM,CAACzB,OAArB;AACA,aAAO3K,MAAM,CAACoF,IAAP,CAAYuF,OAAO,CAAC/C,OAApB,EAA6B4C,GAA7B,CAAiC,UAAUb,OAAV,EAAmB;AACzD,eAAO0C,MAAM,CAACX,gBAAP,CAAwB;AAC7B/B,UAAAA,OAAO,EAAEA,OADoB;AAE7BgB,UAAAA,OAAO,EAAEA;AAFoB,SAAxB,CAAP;AAID,OALM,CAAP;AAMD,KAZA,CAYC;AACF;;AAbC,GAxLsB,EAuMtB;AACD7K,IAAAA,GAAG,EAAE,iBADJ;AAEDC,IAAAA,KAAK,EAAE,SAASuM,eAAT,CAAyBzE,KAAzB,EAAgC;AACrC,aAAO7H,MAAM,CAAC2G,MAAP,CAAc,EAAd,EAAkBkB,KAAlB,EAAyB;AAC9BlF,QAAAA,IAAI,EAAE,KAAKA,IAAL,CAAU4J,GAAV,CAAc1E,KAAK,CAACG,EAApB,CADwB;AAE9Bd,QAAAA,OAAO,EAAE,KAAKA,OAAL,CAAaqF,GAAb,EAFqB;AAG9BpF,QAAAA,KAAK,EAAE,KAAKA,KAAL,CAAWU,KAAK,CAACG,EAAjB;AAHuB,OAAzB,CAAP;AAKD;AARA,GAvMsB,EAgNtB;AACDlI,IAAAA,GAAG,EAAE,cADJ;AAEDC,IAAAA,KAAK,EAAE,SAASyM,YAAT,CAAsB3E,KAAtB,EAA6B;AAClC,WAAKV,KAAL,CAAWU,KAAK,CAACG,EAAjB,EAAqByE,KAArB;AACD;AAJA,GAhNsB,EAqNtB;AACD3M,IAAAA,GAAG,EAAE,SADJ;AAEDC,IAAAA,KAAK,EAAE,SAAS2M,OAAT,GAAmB;AACxB,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAIC,OAAO,GAAGhK,SAAS,CAACnB,MAAV,GAAmB,CAAnB,IAAwBmB,SAAS,CAAC,CAAD,CAAT,KAAiBzB,SAAzC,GAAqDyB,SAAS,CAAC,CAAD,CAA9D,GAAoE;AAChFiK,QAAAA,eAAe,EAAE;AAD+D,OAAlF;;AAIA,UAAI,CAAC,KAAKzF,cAAV,EAA0B;AACxB,cAAM,IAAI2E,KAAJ,CAAU,iEAAV,CAAN;AACD;;AAED,aAAO/L,MAAM,CAACmK,OAAP,CAAe,KAAKpD,UAAL,CAAgBa,OAA/B,EAAwCkD,MAAxC,CAA+C,UAAUC,GAAV,EAAe+B,MAAf,EAAuB;AAC3E,YAAIC,MAAM,GAAG1M,cAAc,CAACyM,MAAD,EAAS,CAAT,CAA3B;AAAA,YACInD,OAAO,GAAGoD,MAAM,CAAC,CAAD,CADpB;AAAA,YAEIhF,UAAU,GAAGgF,MAAM,CAAC,CAAD,CAAN,CAAUhF,UAF3B;;AAIA,YAAI4C,OAAO,GAAGgC,MAAM,CAACvF,cAAP,CAAsBW,UAAtB,CAAd;;AAEA,YAAIF,KAAK,GAAG8E,MAAM,CAACjB,gBAAP,CAAwB;AAClC/B,UAAAA,OAAO,EAAEA,OADyB;AAElCgB,UAAAA,OAAO,EAAEA;AAFyB,SAAxB,CAAZ;;AAKA,YAAI,CAACiC,OAAO,CAACC,eAAT,IAA4BhF,KAAK,CAACQ,UAAN,CAAiB2E,QAAjD,EAA2D;AACzD,iBAAOjC,GAAP;AACD;;AAEDA,QAAAA,GAAG,CAACpB,OAAD,CAAH,GAAe3J,MAAM,CAACmK,OAAP,CAAetC,KAAf,EAAsBiD,MAAtB,CAA6B,UAAUmC,QAAV,EAAoBC,MAApB,EAA4B;AACtE,cAAIC,MAAM,GAAG9M,cAAc,CAAC6M,MAAD,EAAS,CAAT,CAA3B;AAAA,cACIpN,GAAG,GAAGqN,MAAM,CAAC,CAAD,CADhB;AAAA,cAEIpN,KAAK,GAAGoN,MAAM,CAAC,CAAD,CAFlB;;AAIA,cAAI,OAAOpN,KAAP,KAAiB,UAArB,EAAiC;AAC/B,mBAAOkN,QAAP;AACD;;AAED,cAAItL,KAAK,CAACC,OAAN,CAAc7B,KAAd,CAAJ,EAA0B;AACxB,mBAAOC,MAAM,CAAC2G,MAAP,CAAcsG,QAAd,EAAwBrN,eAAe,CAAC,EAAD,EAAKE,GAAL,EAAUC,KAAK,CAACoE,KAAN,GAAciJ,IAAd,EAAV,CAAvC,CAAP;AACD;;AAED,iBAAOpN,MAAM,CAAC2G,MAAP,CAAcsG,QAAd,EAAwBrN,eAAe,CAAC,EAAD,EAAKE,GAAL,EAAUC,KAAV,CAAvC,CAAP;AACD,SAdc,EAcZ;AACD4C,UAAAA,IAAI,EAAEkF,KAAK,CAACwF;AADX,SAdY,CAAf;AAiBA,eAAOtC,GAAP;AACD,OAlCM,EAkCJ,EAlCI,CAAP;AAmCD;AAhDA,GArNsB,EAsQtB;AACDjL,IAAAA,GAAG,EAAE,sBADJ;AAEDC,IAAAA,KAAK,EAAE,SAAS2H,oBAAT,GAAgC;AACrC,UAAIE,OAAO,GAAG,KAAK8E,OAAL,CAAa;AACzBG,QAAAA,eAAe,EAAE;AADQ,OAAb,CAAd;AAGA,UAAIS,cAAc,GAAGtN,MAAM,CAACuN,MAAP,CAAc3F,OAAd,EAAuBkD,MAAvB,CAA8B,UAAUC,GAAV,EAAeyC,MAAf,EAAuB;AACxE,YAAIpF,KAAK,GAAGoF,MAAM,CAACpF,KAAnB;AACA2C,QAAAA,GAAG,CAAC3C,KAAD,CAAH,GAAa,EAAb;AACA,eAAO2C,GAAP;AACD,OAJoB,EAIlB,EAJkB,CAArB;AAKA,aAAO;AACLxC,QAAAA,CAAC,EAAE,CADE;AAELrB,QAAAA,OAAO,EAAE,KAAKA,OAAL,CAAaqF,GAAb,EAFJ;AAGLkB,QAAAA,gBAAgB,EAAE,EAHb;AAILH,QAAAA,cAAc,EAAEA,cAJX;AAKL1F,QAAAA,OAAO,EAAEA;AALJ,OAAP;AAOD;AAlBA,GAtQsB,EAyRtB;AACD9H,IAAAA,GAAG,EAAE,KADJ;AAEDC,IAAAA,KAAK,EAAE,SAAS2N,GAAT,GAAe;AACpB,UAAIC,MAAM,GAAG,IAAb;;AAEA,aAAO3N,MAAM,CAACuN,MAAP,CAAc,KAAKb,OAAL,EAAd,EAA8BlC,GAA9B,CAAkC,UAAUoD,MAAV,EAAkB;AACzD,YAAI5F,EAAE,GAAG4F,MAAM,CAAC5F,EAAhB;AACA,eAAO2F,MAAM,CAACE,MAAP,CAAc7F,EAAd,CAAP;AACD,OAHM,CAAP;AAID;AATA,GAzRsB,EAmStB;AACDlI,IAAAA,GAAG,EAAE,QADJ;AAEDC,IAAAA,KAAK,EAAE,SAAS8N,MAAT,CAAgBlE,OAAhB,EAAyB;AAC9B,UAAImE,MAAM,GAAG,IAAb;;AAEA,UAAI,CAAC,KAAK1G,cAAV,EAA0B;AACxB,cAAM,IAAI2E,KAAJ,CAAU,oEAAV,CAAN;AACD;;AAED,UAAIhE,UAAJ;;AAEA,UAAI;AACF,YAAIgG,sBAAsB,GAAG,KAAKhH,UAAL,CAAgB+C,cAAhB,CAA+BH,OAA/B,CAA7B;;AAEA5B,QAAAA,UAAU,GAAGgG,sBAAsB,CAAChG,UAApC;AACD,OAJD,CAIE,OAAOrG,GAAP,EAAY;AACZ,eAAO,IAAP;AACD;;AAED,UAAIiJ,OAAO,GAAG,KAAKvD,cAAL,CAAoBW,UAApB,CAAd;AACA,UAAIF,KAAK,GAAG,KAAK6D,gBAAL,CAAsB;AAChC/B,QAAAA,OAAO,EAAEA,OADuB;AAEhCgB,QAAAA,OAAO,EAAEA;AAFuB,OAAtB,CAAZ;AAIA,aAAO3K,MAAM,CAAC2G,MAAP,CAAc,EAAd,EAAkBkB,KAAlB,EAAyB;AAC9BmG,QAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AAChC,cAAIC,OAAO,GAAGlO,MAAM,CAAC2G,MAAP,CAAc,EAAd,EAAkBmH,MAAM,CAACxB,eAAP,CAAuBzE,KAAvB,CAAlB,EAAiD;AAC7DsG,YAAAA,QAAQ,EAAE;AADmD,WAAjD,CAAd;AAGA,iBAAOtG,KAAK,CAACuG,cAAN,CAAqBpO,MAAM,CAAC2G,MAAP,CAAc,EAAd,EAAkBuH,OAAlB,EAA2BD,MAA3B,CAArB,CAAP;AACD;AAN6B,OAAzB,CAAP;AAQD;AAhCA,GAnSsB,CAAb,CAAZ;;AAsUA,SAAOpH,UAAP;AACD,CA9XoC,EAA9B","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport memoize from 'memoizerific';\nimport mapValues from 'lodash/mapValues';\nimport pick from 'lodash/pick';\nimport global from 'global';\nimport { SynchronousPromise } from 'synchronous-promise';\nimport { StoryIndexStore } from './StoryIndexStore';\nimport { ArgsStore } from './ArgsStore';\nimport { GlobalsStore } from './GlobalsStore';\nimport { processCSFFile } from './processCSFFile';\nimport { prepareStory } from './prepareStory';\nimport { HooksContext } from './hooks';\nimport { normalizeInputTypes } from './normalizeInputTypes';\nimport { inferArgTypes } from './inferArgTypes';\nimport { inferControls } from './inferControls'; // TODO -- what are reasonable values for these?\n\nvar CSF_CACHE_SIZE = 1000;\nvar STORY_CACHE_SIZE = 10000;\n\nfunction normalizeProjectAnnotations(_ref) {\n  var argTypes = _ref.argTypes,\n      globalTypes = _ref.globalTypes,\n      argTypesEnhancers = _ref.argTypesEnhancers,\n      annotations = _objectWithoutProperties(_ref, [\"argTypes\", \"globalTypes\", \"argTypesEnhancers\"]);\n\n  return Object.assign({}, argTypes && {\n    argTypes: normalizeInputTypes(argTypes)\n  }, globalTypes && {\n    globalTypes: normalizeInputTypes(globalTypes)\n  }, {\n    argTypesEnhancers: [].concat(_toConsumableArray(argTypesEnhancers || []), [inferArgTypes, // inferControls technically should only run if the user is using the controls addon,\n    // and so should be added by a preset there. However, as it seems some code relies on controls\n    // annotations (in particular the angular implementation's `cleanArgsDecorator`), for backwards\n    // compatibility reasons, we will leave this in the store until 7.0\n    inferControls])\n  }, annotations);\n}\n\nexport var StoryStore = /*#__PURE__*/function () {\n  function StoryStore() {\n    var _this = this;\n\n    _classCallCheck(this, StoryStore);\n\n    this.storyIndex = void 0;\n    this.importFn = void 0;\n    this.projectAnnotations = void 0;\n    this.globals = void 0;\n    this.args = void 0;\n    this.hooks = void 0;\n    this.cachedCSFFiles = void 0;\n    this.processCSFFileWithCache = void 0;\n    this.prepareStoryWithCache = void 0;\n    this.initializationPromise = void 0;\n    this.resolveInitializationPromise = void 0;\n\n    this.getStoriesJsonData = function () {\n      var value = _this.getSetStoriesPayload();\n\n      var allowedParameters = ['fileName', 'docsOnly', 'framework', '__id', '__isArgsStory'];\n      var stories = mapValues(value.stories, function (story) {\n        var _global$FEATURES;\n\n        return Object.assign({}, pick(story, ['id', 'name', 'title']), {\n          importPath: _this.storyIndex.stories[story.id].importPath\n        }, !((_global$FEATURES = global.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7) && {\n          kind: story.title,\n          story: story.name,\n          parameters: Object.assign({}, pick(story.parameters, allowedParameters), {\n            fileName: _this.storyIndex.stories[story.id].importPath\n          })\n        });\n      });\n      return {\n        v: 3,\n        stories: stories\n      };\n    };\n\n    this.globals = new GlobalsStore();\n    this.args = new ArgsStore();\n    this.hooks = {}; // We use a cache for these two functions for two reasons:\n    //  1. For performance\n    //  2. To ensure that when the same story is prepared with the same inputs you get the same output\n\n    this.processCSFFileWithCache = memoize(CSF_CACHE_SIZE)(processCSFFile);\n    this.prepareStoryWithCache = memoize(STORY_CACHE_SIZE)(prepareStory); // We cannot call `loadStory()` until we've been initialized properly. But we can wait for it.\n\n    this.initializationPromise = new SynchronousPromise(function (resolve) {\n      _this.resolveInitializationPromise = resolve;\n    });\n  }\n\n  _createClass(StoryStore, [{\n    key: \"setProjectAnnotations\",\n    value: function setProjectAnnotations(projectAnnotations) {\n      // By changing `this.projectAnnotations, we implicitly invalidate the `prepareStoryWithCache`\n      this.projectAnnotations = normalizeProjectAnnotations(projectAnnotations);\n      var globals = projectAnnotations.globals,\n          globalTypes = projectAnnotations.globalTypes;\n      this.globals.set({\n        globals: globals,\n        globalTypes: globalTypes\n      });\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize(_ref2) {\n      var storyIndex = _ref2.storyIndex,\n          importFn = _ref2.importFn,\n          _ref2$cache = _ref2.cache,\n          cache = _ref2$cache === void 0 ? false : _ref2$cache;\n      this.storyIndex = new StoryIndexStore(storyIndex);\n      this.importFn = importFn; // We don't need the cache to be loaded to call `loadStory`, we just need the index ready\n\n      this.resolveInitializationPromise();\n      return cache ? this.cacheAllCSFFiles() : SynchronousPromise.resolve();\n    } // This means that one of the CSF files has changed.\n    // If the `importFn` has changed, we will invalidate both caches.\n    // If the `storyIndex` data has changed, we may or may not invalidate the caches, depending\n    // on whether we've loaded the relevant files yet.\n\n  }, {\n    key: \"onStoriesChanged\",\n    value: function () {\n      var _onStoriesChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref3) {\n        var importFn, storyIndex;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                importFn = _ref3.importFn, storyIndex = _ref3.storyIndex;\n                if (importFn) this.importFn = importFn;\n                if (storyIndex) this.storyIndex.stories = storyIndex.stories;\n\n                if (!this.cachedCSFFiles) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 6;\n                return this.cacheAllCSFFiles();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onStoriesChanged(_x) {\n        return _onStoriesChanged.apply(this, arguments);\n      }\n\n      return onStoriesChanged;\n    }() // To load a single CSF file to service a story we need to look up the importPath in the index\n\n  }, {\n    key: \"loadCSFFileByStoryId\",\n    value: function loadCSFFileByStoryId(storyId) {\n      var _this2 = this;\n\n      var _this$storyIndex$stor = this.storyIndex.storyIdToEntry(storyId),\n          importPath = _this$storyIndex$stor.importPath,\n          title = _this$storyIndex$stor.title;\n\n      return this.importFn(importPath).then(function (moduleExports) {\n        return (// We pass the title in here as it may have been generated by autoTitle on the server.\n          _this2.processCSFFileWithCache(moduleExports, importPath, title)\n        );\n      });\n    }\n  }, {\n    key: \"loadAllCSFFiles\",\n    value: function loadAllCSFFiles() {\n      var _this3 = this;\n\n      var importPaths = {};\n      Object.entries(this.storyIndex.stories).forEach(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n            storyId = _ref5[0],\n            importPath = _ref5[1].importPath;\n\n        importPaths[importPath] = storyId;\n      });\n      var csfFilePromiseList = Object.entries(importPaths).map(function (_ref6) {\n        var _ref7 = _slicedToArray(_ref6, 2),\n            importPath = _ref7[0],\n            storyId = _ref7[1];\n\n        return _this3.loadCSFFileByStoryId(storyId).then(function (csfFile) {\n          return {\n            importPath: importPath,\n            csfFile: csfFile\n          };\n        });\n      });\n      return SynchronousPromise.all(csfFilePromiseList).then(function (list) {\n        return list.reduce(function (acc, _ref8) {\n          var importPath = _ref8.importPath,\n              csfFile = _ref8.csfFile;\n          acc[importPath] = csfFile;\n          return acc;\n        }, {});\n      });\n    }\n  }, {\n    key: \"cacheAllCSFFiles\",\n    value: function cacheAllCSFFiles() {\n      var _this4 = this;\n\n      return this.initializationPromise.then(function () {\n        return _this4.loadAllCSFFiles().then(function (csfFiles) {\n          _this4.cachedCSFFiles = csfFiles;\n        });\n      });\n    } // Load the CSF file for a story and prepare the story from it and the project annotations.\n\n  }, {\n    key: \"loadStory\",\n    value: function () {\n      var _loadStory = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref9) {\n        var storyId, csfFile;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                storyId = _ref9.storyId;\n                _context2.next = 3;\n                return this.initializationPromise;\n\n              case 3:\n                _context2.next = 5;\n                return this.loadCSFFileByStoryId(storyId);\n\n              case 5:\n                csfFile = _context2.sent;\n                return _context2.abrupt(\"return\", this.storyFromCSFFile({\n                  storyId: storyId,\n                  csfFile: csfFile\n                }));\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadStory(_x2) {\n        return _loadStory.apply(this, arguments);\n      }\n\n      return loadStory;\n    }() // This function is synchronous for convenience -- often times if you have a CSF file already\n    // it is easier not to have to await `loadStory`.\n\n  }, {\n    key: \"storyFromCSFFile\",\n    value: function storyFromCSFFile(_ref10) {\n      var storyId = _ref10.storyId,\n          csfFile = _ref10.csfFile;\n      var storyAnnotations = csfFile.stories[storyId];\n\n      if (!storyAnnotations) {\n        throw new Error(\"Didn't find '\".concat(storyId, \"' in CSF file, this is unexpected\"));\n      }\n\n      var componentAnnotations = csfFile.meta;\n      var story = this.prepareStoryWithCache(storyAnnotations, componentAnnotations, this.projectAnnotations);\n      this.args.setInitial(story);\n      this.hooks[story.id] = this.hooks[story.id] || new HooksContext();\n      return story;\n    } // If we have a CSF file we can get all the stories from it synchronously\n\n  }, {\n    key: \"componentStoriesFromCSFFile\",\n    value: function componentStoriesFromCSFFile(_ref11) {\n      var _this5 = this;\n\n      var csfFile = _ref11.csfFile;\n      return Object.keys(csfFile.stories).map(function (storyId) {\n        return _this5.storyFromCSFFile({\n          storyId: storyId,\n          csfFile: csfFile\n        });\n      });\n    } // A prepared story does not include args, globals or hooks. These are stored in the story store\n    // and updated separtely to the (immutable) story.\n\n  }, {\n    key: \"getStoryContext\",\n    value: function getStoryContext(story) {\n      return Object.assign({}, story, {\n        args: this.args.get(story.id),\n        globals: this.globals.get(),\n        hooks: this.hooks[story.id]\n      });\n    }\n  }, {\n    key: \"cleanupStory\",\n    value: function cleanupStory(story) {\n      this.hooks[story.id].clean();\n    }\n  }, {\n    key: \"extract\",\n    value: function extract() {\n      var _this6 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeDocsOnly: false\n      };\n\n      if (!this.cachedCSFFiles) {\n        throw new Error('Cannot call extract() unless you call cacheAllCSFFiles() first.');\n      }\n\n      return Object.entries(this.storyIndex.stories).reduce(function (acc, _ref12) {\n        var _ref13 = _slicedToArray(_ref12, 2),\n            storyId = _ref13[0],\n            importPath = _ref13[1].importPath;\n\n        var csfFile = _this6.cachedCSFFiles[importPath];\n\n        var story = _this6.storyFromCSFFile({\n          storyId: storyId,\n          csfFile: csfFile\n        });\n\n        if (!options.includeDocsOnly && story.parameters.docsOnly) {\n          return acc;\n        }\n\n        acc[storyId] = Object.entries(story).reduce(function (storyAcc, _ref14) {\n          var _ref15 = _slicedToArray(_ref14, 2),\n              key = _ref15[0],\n              value = _ref15[1];\n\n          if (typeof value === 'function') {\n            return storyAcc;\n          }\n\n          if (Array.isArray(value)) {\n            return Object.assign(storyAcc, _defineProperty({}, key, value.slice().sort()));\n          }\n\n          return Object.assign(storyAcc, _defineProperty({}, key, value));\n        }, {\n          args: story.initialArgs\n        });\n        return acc;\n      }, {});\n    }\n  }, {\n    key: \"getSetStoriesPayload\",\n    value: function getSetStoriesPayload() {\n      var stories = this.extract({\n        includeDocsOnly: true\n      });\n      var kindParameters = Object.values(stories).reduce(function (acc, _ref16) {\n        var title = _ref16.title;\n        acc[title] = {};\n        return acc;\n      }, {});\n      return {\n        v: 2,\n        globals: this.globals.get(),\n        globalParameters: {},\n        kindParameters: kindParameters,\n        stories: stories\n      };\n    }\n  }, {\n    key: \"raw\",\n    value: function raw() {\n      var _this7 = this;\n\n      return Object.values(this.extract()).map(function (_ref17) {\n        var id = _ref17.id;\n        return _this7.fromId(id);\n      });\n    }\n  }, {\n    key: \"fromId\",\n    value: function fromId(storyId) {\n      var _this8 = this;\n\n      if (!this.cachedCSFFiles) {\n        throw new Error('Cannot call fromId/raw() unless you call cacheAllCSFFiles() first.');\n      }\n\n      var importPath;\n\n      try {\n        var _this$storyIndex$stor2 = this.storyIndex.storyIdToEntry(storyId);\n\n        importPath = _this$storyIndex$stor2.importPath;\n      } catch (err) {\n        return null;\n      }\n\n      var csfFile = this.cachedCSFFiles[importPath];\n      var story = this.storyFromCSFFile({\n        storyId: storyId,\n        csfFile: csfFile\n      });\n      return Object.assign({}, story, {\n        storyFn: function storyFn(update) {\n          var context = Object.assign({}, _this8.getStoryContext(story), {\n            viewMode: 'story'\n          });\n          return story.unboundStoryFn(Object.assign({}, context, update));\n        }\n      });\n    }\n  }]);\n\n  return StoryStore;\n}();"]},"metadata":{},"sourceType":"module"}