{"ast":null,"code":"function cov_98fdtbge1() {\n  var path = \"F:\\\\work\\\\Cegedim Hackathon 2022\\\\patient-management-system\\\\patient-management-system-angular\\\\src\\\\polyfills.ts\";\n  var hash = \"8a6dfa0af302fb73836485490aa5fff2052b4b79\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"F:\\\\work\\\\Cegedim Hackathon 2022\\\\patient-management-system\\\\patient-management-system-angular\\\\src\\\\polyfills.ts\",\n    statementMap: {},\n    fnMap: {},\n    branchMap: {},\n    s: {},\n    f: {},\n    b: {},\n    inputSourceMap: {\n      version: 3,\n      file: \"polyfills.js\",\n      sourceRoot: \"\",\n      sources: [\"F:\\\\work\\\\Cegedim Hackathon 2022\\\\patient-management-system\\\\patient-management-system-angular\\\\src\\\\polyfills.ts\"],\n      names: [],\n      mappings: \"AAAA;;;;;;;;;;;;;;GAcG;AAEH;;GAEG;AAEH;;;;;;;;;;;;;;;;;;;;;;GAsBG;AAEH;;GAEG;AACH,OAAO,SAAS,CAAC,CAAE,6BAA6B;AAGhD;;GAEG\",\n      sourcesContent: [\"/**\\n * This file includes polyfills needed by Angular and is loaded before the app.\\n * You can add your own extra polyfills to this file.\\n *\\n * This file is divided into 2 sections:\\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\\n *      file.\\n *\\n * The current setup is for so-called \\\"evergreen\\\" browsers; the last versions of browsers that\\n * automatically update themselves. This includes recent versions of Safari, Chrome (including\\n * Opera), Edge on the desktop, and iOS and Chrome on mobile.\\n *\\n * Learn more in https://angular.io/guide/browser-support\\n */\\n\\n/***************************************************************************************************\\n * BROWSER POLYFILLS\\n */\\n\\n/**\\n * By default, zone.js will patch all possible macroTask and DomEvents\\n * user can disable parts of macroTask/DomEvents patch by setting following flags\\n * because those flags need to be set before `zone.js` being loaded, and webpack\\n * will put import in the top of bundle, so user need to create a separate file\\n * in this directory (for example: zone-flags.ts), and put the following flags\\n * into that file, and then add the following code before importing zone.js.\\n * import './zone-flags';\\n *\\n * The flags allowed in zone-flags.ts are listed here.\\n *\\n * The following flags will work for all browsers.\\n *\\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\\n *\\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\\n *\\n *  (window as any).__Zone_enable_cross_context_check = true;\\n *\\n */\\n\\n/***************************************************************************************************\\n * Zone JS is required by default for Angular itself.\\n */\\nimport 'zone.js';  // Included with Angular CLI.\\n\\n\\n/***************************************************************************************************\\n * APPLICATION IMPORTS\\n */\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"8a6dfa0af302fb73836485490aa5fff2052b4b79\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_98fdtbge1 = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_98fdtbge1();\n\n/**\r\n * This file includes polyfills needed by Angular and is loaded before the app.\r\n * You can add your own extra polyfills to this file.\r\n *\r\n * This file is divided into 2 sections:\r\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\r\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\r\n *      file.\r\n *\r\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\r\n * automatically update themselves. This includes recent versions of Safari, Chrome (including\r\n * Opera), Edge on the desktop, and iOS and Chrome on mobile.\r\n *\r\n * Learn more in https://angular.io/guide/browser-support\r\n */\n\n/***************************************************************************************************\r\n * BROWSER POLYFILLS\r\n */\n\n/**\r\n * By default, zone.js will patch all possible macroTask and DomEvents\r\n * user can disable parts of macroTask/DomEvents patch by setting following flags\r\n * because those flags need to be set before `zone.js` being loaded, and webpack\r\n * will put import in the top of bundle, so user need to create a separate file\r\n * in this directory (for example: zone-flags.ts), and put the following flags\r\n * into that file, and then add the following code before importing zone.js.\r\n * import './zone-flags';\r\n *\r\n * The flags allowed in zone-flags.ts are listed here.\r\n *\r\n * The following flags will work for all browsers.\r\n *\r\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\r\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\r\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\r\n *\r\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\r\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\r\n *\r\n *  (window as any).__Zone_enable_cross_context_check = true;\r\n *\r\n */\n\n/***************************************************************************************************\r\n * Zone JS is required by default for Angular itself.\r\n */\nimport 'zone.js'; // Included with Angular CLI.\n\n/***************************************************************************************************\r\n * APPLICATION IMPORTS\r\n */","map":{"version":3,"sources":["F:/work/Cegedim Hackathon 2022/patient-management-system/patient-management-system-angular/src/polyfills.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;;AAfZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,OAAO,SAAP,C,CAAkB;;AAClB;AACA;AACA","sourcesContent":["/**\r\n * This file includes polyfills needed by Angular and is loaded before the app.\r\n * You can add your own extra polyfills to this file.\r\n *\r\n * This file is divided into 2 sections:\r\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\r\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\r\n *      file.\r\n *\r\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\r\n * automatically update themselves. This includes recent versions of Safari, Chrome (including\r\n * Opera), Edge on the desktop, and iOS and Chrome on mobile.\r\n *\r\n * Learn more in https://angular.io/guide/browser-support\r\n */\r\n/***************************************************************************************************\r\n * BROWSER POLYFILLS\r\n */\r\n/**\r\n * By default, zone.js will patch all possible macroTask and DomEvents\r\n * user can disable parts of macroTask/DomEvents patch by setting following flags\r\n * because those flags need to be set before `zone.js` being loaded, and webpack\r\n * will put import in the top of bundle, so user need to create a separate file\r\n * in this directory (for example: zone-flags.ts), and put the following flags\r\n * into that file, and then add the following code before importing zone.js.\r\n * import './zone-flags';\r\n *\r\n * The flags allowed in zone-flags.ts are listed here.\r\n *\r\n * The following flags will work for all browsers.\r\n *\r\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\r\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\r\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\r\n *\r\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\r\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\r\n *\r\n *  (window as any).__Zone_enable_cross_context_check = true;\r\n *\r\n */\r\n/***************************************************************************************************\r\n * Zone JS is required by default for Angular itself.\r\n */\r\nimport 'zone.js'; // Included with Angular CLI.\r\n/***************************************************************************************************\r\n * APPLICATION IMPORTS\r\n */\r\n"]},"metadata":{},"sourceType":"module"}