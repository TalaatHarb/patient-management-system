{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "PatientMangamentService",
            "id": "injectable-PatientMangamentService-fc39bd2603781f2ee318c648b2602fb912ba6f49d0edc44c5bdcafd8e52954b8b1f77043312598d140eb422fabaefb4585cf9ee31222f0ddd9eae7883dc9fcf0",
            "file": "src/app/services/patient-mangament.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createMedicalCenter",
                    "args": [
                        {
                            "name": "medicalCenter",
                            "type": "MedicalCenter",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<MedicalCenter>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "medicalCenter",
                            "type": "MedicalCenter",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createOrganization",
                    "args": [
                        {
                            "name": "organization",
                            "type": "Organization",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Organization>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "organization",
                            "type": "Organization",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fetchOrganizations",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Organization[]>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { MedicalCenter } from '../models/medical-center.model';\r\nimport { Organization } from '../models/organization.model';\r\n\r\nconst API_URL = environment.apiUrl;\r\nconst ORGANIZATION_URL = API_URL + '/v1/organizations';\r\nconst MEDICAL_CENTER_URL = '/medical-centers';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatientMangamentService {\r\n  \r\n  constructor(private httpClient: HttpClient) { }\r\n  \r\n  public createOrganization(organization: Organization): Observable<Organization>{\r\n    const ORGANIZATION_URL = API_URL + '/v1/organizations';\r\n    return this.httpClient.post<Organization>(ORGANIZATION_URL, organization);\r\n  }\r\n  \r\n  public fetchOrganizations(): Observable<Organization[]>{\r\n    return this.httpClient.get<Organization[]>(ORGANIZATION_URL);\r\n  }\r\n\r\n  public createMedicalCenter(medicalCenter: MedicalCenter): Observable<MedicalCenter> {\r\n    const url = ORGANIZATION_URL + '/' + medicalCenter.organizationId + MEDICAL_CENTER_URL;\r\n    return this.httpClient.post<MedicalCenter>(url, medicalCenter);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "MedicalCenter",
            "id": "class-MedicalCenter-05bbcde467af8e2a4a6d0af006bb3b739a330189b7053287b7cea80d7e0bd7d257a039a3c9b84b318de37acb202e1e3a3f9583fd66fcaea864fd1f6579d75109",
            "file": "src/app/models/medical-center.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class MedicalCenter{\r\n    public id?: string;\r\n    public name: string = '';\r\n    public organizationId: string = '';\r\n}",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "organizationId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Organization",
            "id": "class-Organization-cf2b922351e1a06df25bbd520e0187c8b990308bc11f58686693ffeff91e4815557ec79021a0da5f2c650bde398804ec501ecfd3730b60b76285cce86434bfcd",
            "file": "src/app/models/organization.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Organization{\r\n    public id?: string;\r\n    public name: string = '';\r\n}",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-5cdec6dc2fc3039a5efda3bb87dec908a84c48974feee8dc20e698da36638e15b232a8bd017f6f330b0b8ca1872e34f6bb04dfbc81d7476ded8d5fdff516b455",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "body {\r\n  font-size: 100%;\r\n  overflow-y: scroll;\r\n  font-family: sans-serif;\r\n  -ms-text-size-adjust: 100%;\r\n  -webkit-text-size-adjust: 100%;\r\n  -ms-text-size-adjust: 100%;\r\n  -webkit-text-size-adjust: 100%;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-rendering: optimizeLegibility;\r\n  background-color: #fefefe;\r\n}\r\na {\r\n  text-decoration: none;\r\n  transition: all 0.6s ease;\r\n\r\n  &:hover {\r\n    transition: all 0.6s ease;\r\n  }\r\n}\r\n\r\n.app {\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n/* -------------\r\nSidebar\r\n----------------*/\r\n.sidebar {\r\n  width: 17em;\r\n  min-width: 205px;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  background-color: #19222a;\r\n  transform: translateZ(0);\r\n  -webkit-transform: translateZ(0);\r\n  visibility: visible;\r\n  backface-visibility: hidden;\r\n  -webkit-backface-visibility: hidden;\r\n\r\n  header {\r\n    background-color: #2cc1ff;\r\n    width: 100%;\r\n    display: block;\r\n    padding: 0.75em 1em;\r\n  }\r\n}\r\n\r\n/* -------------\r\nSidebar Nav\r\n----------------*/\r\n.sidebar-nav {\r\n  position: fixed;\r\n  //width: 13em;\r\n  background-color: #19222a;\r\n  height: 100%;\r\n  font-weight: 400;\r\n  font-size: 1.2em;\r\n  overflow: auto;\r\n  padding-bottom: 6em;\r\n  z-index: 9;\r\n  overflow: hidden;\r\n  -webkit-overflow-scrolling: touch;\r\n\r\n  ul {\r\n    list-style: none;\r\n    display: block;\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    li {\r\n      margin-left: 0;\r\n      padding-left: 0;\r\n      //min-width: 13em;\r\n      display: inline-block;\r\n      width: 100%;\r\n\r\n      a {\r\n        color: rgba(255, 255, 255, 0.9);\r\n        font-size: 0.75em;\r\n        padding: 1.05em 1em;\r\n        position: relative;\r\n        display: block;\r\n\r\n        &:hover {\r\n          background-color: rgba(58, 58, 58, 0.9);\r\n          transition: all 0.6s ease;\r\n        }\r\n      }\r\n      /* -------------\r\nSidebar: icons\r\n----------------*/\r\n      i {\r\n        font-size: 1.8em;\r\n        padding-right: 0.5em;\r\n        width: 9em;\r\n        display: inline;\r\n        vertical-align: middle;\r\n      }\r\n    }\r\n  }\r\n\r\n  /* -------------\r\nChev elements\r\n----------------*/\r\n  & > ul > li > a:after {\r\n    content: \">\";\r\n    font-family: ionicons;\r\n    font-size: 1em;\r\n    width: 10px;\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 0.75em;\r\n    top: 45%;\r\n  }\r\n  /* -------------\r\nNav-Flyout\r\n----------------*/\r\n  & .nav-flyout {\r\n    position: absolute;\r\n    background-color: #080d11;\r\n    z-index: 9;\r\n    left: 2.5em;\r\n    top: 0;\r\n    height: 100vh;\r\n    transform: translateX(100%);\r\n    transition: all 0.5s ease;\r\n\r\n    a:hover {\r\n      background-color: rgba(255, 255, 255, 0.05);\r\n    }\r\n  }\r\n\r\n  /* -------------\r\nHover\r\n----------------*/\r\n  & ul > li:hover {\r\n    .nav-flyout {\r\n      transform: translateX(0);\r\n      transition: all 0.5s ease;\r\n    }\r\n  }\r\n}\r\n\r\n/*-----------------\r\nContent\r\n-----------------*/\r\n.app .content{\r\n  width: 90vw;\r\n  max-width: 90vw;\r\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"app\">\r\n  <aside class=\"sidebar\">\r\n    <header>\r\n      Patient Management system\r\n    </header>\r\n    <nav class=\"sidebar-nav\">\r\n      <ul>\r\n        <li>\r\n          <a routerLink=\"/web\"><span>Patients</span></a>\r\n          <ul class=\"nav-flyout\">\r\n            <li>\r\n              <a routerLink=\"/web/edit-patient\">Search for Patient</a>\r\n            </li>\r\n            <li>\r\n              <a routerLink=\"/web/create-patient\">Create Patient</a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <a routerLink=\"/web\"> <span class=\"\">Medical Centers</span></a>\r\n          <ul class=\"nav-flyout\">\r\n            <li>\r\n              <a routerLink=\"/web/edit-medical-center\">Search for Medical Center</a>\r\n            </li>\r\n            <li>\r\n              <a routerLink=\"/web/create-medical-center\">Create Medical Center</a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <a routerLink=\"/web\"><span class=\"\">Organizations</span></a>\r\n          <ul class=\"nav-flyout\">\r\n            <li>\r\n              <a routerLink=\"/web/edit-organization\">Search for Organization</a>\r\n            </li>\r\n            <li>\r\n              <a routerLink=\"/web/create-organization\">Create Organization</a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </aside>\r\n  <main class=\"content\">\r\n    <router-outlet></router-outlet>\r\n  </main>\r\n</section>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-a53fd738b978780d39fb5fcc9ae4cfe0088e57a1f6ce674862d57dab9192140bd1c05548a9910db0469a431142886e658ff2e761f15781b2ad430e58d64724d0",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 786,
                            "end": 799,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 330,
                            "tagName": {
                                "pos": 787,
                                "end": 795,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 34,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 50
                    }
                }
            }
        },
        {
            "name": "CreateMedicalCenterComponent",
            "id": "component-CreateMedicalCenterComponent-b242ad68387ec631e82d0f3ff02c1bf2e577b0586397b1ace1d9150a525c5f1741760fedb6de66888dd18576c8cf7a461f8921d77119abb8c2cc1af6cd6e6330",
            "file": "src/app/components/create-medical-center/create-medical-center.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-medical-center",
            "styleUrls": [
                "./create-medical-center.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-medical-center.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "medicalCenterToCreate",
                    "defaultValue": "new MedicalCenter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MedicalCenter",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "organizations",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Organization[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "createMedicalCenter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchOrganization",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { MedicalCenter } from 'src/app/models/medical-center.model';\r\nimport { Organization } from 'src/app/models/organization.model';\r\nimport { PatientMangamentService } from 'src/app/services/patient-mangament.service';\r\n\r\n@Component({\r\n  selector: 'app-create-medical-center',\r\n  templateUrl: './create-medical-center.component.html',\r\n  styleUrls: ['./create-medical-center.component.scss']\r\n})\r\nexport class CreateMedicalCenterComponent implements OnInit {\r\n\r\n  organizations: Organization[] = [];\r\n  medicalCenterToCreate: MedicalCenter = new MedicalCenter();\r\n\r\n  constructor(private patientManagementService: PatientMangamentService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchOrganization();\r\n  }\r\n\r\n  fetchOrganization(): void {\r\n    this.patientManagementService.fetchOrganizations().subscribe(orgs => {\r\n      this.organizations = orgs;\r\n    });\r\n  }\r\n\r\n  createMedicalCenter(): void{\r\n    if(this.medicalCenterToCreate.organizationId !== '' && this.medicalCenterToCreate.name !== ''){\r\n      this.patientManagementService.createMedicalCenter(this.medicalCenterToCreate).subscribe(medicalCenter => {\r\n        this.medicalCenterToCreate = medicalCenter;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".create-medical-center-root{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #2cc1ff;\r\n}\r\n\r\n.content{\r\n    display: flex;\r\n    flex-direction: column;\r\n}",
                    "styleUrl": "./create-medical-center.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "patientManagementService",
                        "type": "PatientMangamentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "patientManagementService",
                        "type": "PatientMangamentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"create-medical-center-root\">\r\n    <div class=\"content\">\r\n        <label for=\"organizations\">Choose an organization:</label>\r\n        <select name=\"organizations\" id=\"organizations\" [(ngModel)]=\"medicalCenterToCreate.organizationId\">\r\n            <option value=\"{{organization.id}}\" *ngFor=\"let organization of organizations;index as i\">{{organization.name}}</option>\r\n        </select>\r\n        <label class=\"label\" for=\"medical-center-name\">Medical Center</label>\r\n        <input class=\"input-text\" type=\"text\" [(ngModel)]=\"medicalCenterToCreate.name\" name=\"medical-center-name\" placeholder=\"Medical Center to Create\"/>\r\n        <button class=\"btn btn-create\" (click)=\"createMedicalCenter()\">Create</button>\r\n    </div>\r\n</div>"
        },
        {
            "name": "CreateOrganizationComponent",
            "id": "component-CreateOrganizationComponent-fcd22bd82bda79d994d6750cfe1f19047ffa3d6c27a548922ca669df414affa802a48d36f0951d31bd1c2651f934fba117457b31efff192909352ee683bebddd",
            "file": "src/app/components/create-organization/create-organization.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-organization",
            "styleUrls": [
                "./create-organization.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-organization.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "organizationToCreate",
                    "defaultValue": "new Organization()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Organization",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createOrganization",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Organization } from 'src/app/models/organization.model';\r\nimport { PatientMangamentService } from 'src/app/services/patient-mangament.service';\r\n\r\n@Component({\r\n  selector: 'app-create-organization',\r\n  templateUrl: './create-organization.component.html',\r\n  styleUrls: ['./create-organization.component.scss']\r\n})\r\nexport class CreateOrganizationComponent implements OnInit {\r\n\r\n  public organizationToCreate: Organization = new Organization();\r\n\r\n  constructor(private patientManagementService: PatientMangamentService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createOrganization(): void{\r\n    console.log(this.organizationToCreate.name);\r\n    if(this.organizationToCreate.name !== ''){\r\n      this.patientManagementService.createOrganization(this.organizationToCreate).subscribe(outputOrganization => {\r\n        this.organizationToCreate = outputOrganization;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".create-organization-root{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #2cc1ff;\r\n}\r\n\r\n.content{\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.content > *{\r\n    margin: 0.5em;\r\n    font-size: 18px;\r\n}\r\n\r\n\r\n.btn, .input-text{\r\n    padding: 1em;\r\n    border: none;\r\n}",
                    "styleUrl": "./create-organization.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "patientManagementService",
                        "type": "PatientMangamentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "patientManagementService",
                        "type": "PatientMangamentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"create-organization-root\">\r\n    <div class=\"content\">\r\n        <label class=\"label\" for=\"organization-name\">Organization</label>\r\n        <input class=\"input-text\" type=\"text\" [(ngModel)]=\"organizationToCreate.name\" name=\"organization-name\" placeholder=\"Organization to Create\"/>\r\n        <button class=\"btn btn-create\" (click)=\"createOrganization()\">Create</button>\r\n    </div>\r\n</div>"
        },
        {
            "name": "CreatePatientComponent",
            "id": "component-CreatePatientComponent-47a00fd5c0876e3b906e69eb154bca404cff908ef21c10eeeed0f16ad2b5c6e56a954c2d81eed12b11e77f94662049c404f17945899358fdb2b7c9a36ea3eee3",
            "file": "src/app/components/create-patient/create-patient.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-patient",
            "styleUrls": [
                "./create-patient.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-patient.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { PatientMangamentService } from 'src/app/services/patient-mangament.service';\r\n\r\n@Component({\r\n  selector: 'app-create-patient',\r\n  templateUrl: './create-patient.component.html',\r\n  styleUrls: ['./create-patient.component.scss']\r\n})\r\nexport class CreatePatientComponent implements OnInit {\r\n\r\n  constructor(private patientManagementService: PatientMangamentService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".create-patient-root{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #2cc1ff;\r\n}\r\n\r\n.content p{\r\n    width: 20em;\r\n    height: 20em;\r\n    background-color: aquamarine;\r\n}",
                    "styleUrl": "./create-patient.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "patientManagementService",
                        "type": "PatientMangamentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "patientManagementService",
                        "type": "PatientMangamentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"create-patient-root\">\r\n    <div class=\"content\">\r\n        <p>create-patient works!</p>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-7077bff6e13dd8161f4ed7be9b97388a47336fab1e7cd2368357378f6433077bf40fd804d8f57fbe6f11f6155c907e34848008b6e2584e97cff36a9da657ce03",
            "file": "src/app/components/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".dashboard-root{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #2cc1ff;\r\n}\r\n\r\n.content img{\r\n    width: 10em;\r\n    height: 10em;\r\n}",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"dashboard-root\">\r\n    <div class=\"content\">\r\n        <img src=\"../../../assets/medical-care.png\" alt=\"\">\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "EditMedicalCenterComponent",
            "id": "component-EditMedicalCenterComponent-8ec6de1fb09b90f75ab59a07d9cb5e6854d3adb3b414e9fd0ec4fcfcbb0ca0e51317f804ee943b1ac976c67a88382c87ca72a096eb7ab178b0c45f63376dadeb",
            "file": "src/app/components/edit-medical-center/edit-medical-center.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-medical-center",
            "styleUrls": [
                "./edit-medical-center.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-medical-center.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { PatientMangamentService } from 'src/app/services/patient-mangament.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-medical-center',\r\n  templateUrl: './edit-medical-center.component.html',\r\n  styleUrls: ['./edit-medical-center.component.scss']\r\n})\r\nexport class EditMedicalCenterComponent implements OnInit {\r\n\r\n  constructor(private patientManagementService: PatientMangamentService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".edit-medical-center-root{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #2cc1ff;\r\n}\r\n\r\n.content p{\r\n    width: 20em;\r\n    height: 20em;\r\n    background-color: aquamarine;\r\n}",
                    "styleUrl": "./edit-medical-center.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "patientManagementService",
                        "type": "PatientMangamentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "patientManagementService",
                        "type": "PatientMangamentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"edit-medical-center-root\">\r\n    <div class=\"content\">\r\n        <p>edit-medical-center works!</p>\r\n    </div>\r\n</div>"
        },
        {
            "name": "EditOrganizationComponent",
            "id": "component-EditOrganizationComponent-71dc722704d1f89cd3098303ddac6e9a98e28854869cee5ca2fac85f1c4ae69e61c5f1518f3ed5bbef8c28d74f948ca8e77b6802470167523d0e9c39a3923bba",
            "file": "src/app/components/edit-organization/edit-organization.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-organization",
            "styleUrls": [
                "./edit-organization.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-organization.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { PatientMangamentService } from 'src/app/services/patient-mangament.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-organization',\r\n  templateUrl: './edit-organization.component.html',\r\n  styleUrls: ['./edit-organization.component.scss']\r\n})\r\nexport class EditOrganizationComponent implements OnInit {\r\n\r\n  constructor(private patientManagementService: PatientMangamentService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".edit-organization-root{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #2cc1ff;\r\n}\r\n\r\n.content p{\r\n    width: 20em;\r\n    height: 20em;\r\n    background-color: aquamarine;\r\n}",
                    "styleUrl": "./edit-organization.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "patientManagementService",
                        "type": "PatientMangamentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "patientManagementService",
                        "type": "PatientMangamentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"edit-organization-root\">\r\n    <div class=\"content\">\r\n        <p>edit-organization works!</p>\r\n    </div>\r\n</div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-3d494fd89671305c6be07de00e019efdf08f2e36c2169e5fb75a5acdb2841da927e3ef3cbd21cc18f478373a784b1fb90e8b63b9df4b3498a75b652bd9c37b38",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport type { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-badb6d8cee577661da79ba82ad8f599604afd40fa34e36c7b88d71d77a4fbc7184228cba2f0d73e255d0b7bc51c4c7a8e7b0128b3624aeb0255abab9030fa59a",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport type { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PatientFileComponent",
            "id": "component-PatientFileComponent-9c722dbe9775a35ae83b05609e0548c65a261144d862be1805fc24e1e5aacf9a2cf35948eb9531715dc48e9073d5436b21a552e1b7840d08b873f5abd3be22e1",
            "file": "src/app/components/patient-file/patient-file.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-patient-file",
            "styleUrls": [
                "./patient-file.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./patient-file.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { PatientMangamentService } from 'src/app/services/patient-mangament.service';\r\n\r\n@Component({\r\n  selector: 'app-patient-file',\r\n  templateUrl: './patient-file.component.html',\r\n  styleUrls: ['./patient-file.component.scss']\r\n})\r\nexport class PatientFileComponent implements OnInit {\r\n\r\n  constructor(private patientManagementService: PatientMangamentService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".patient-file-root{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #2cc1ff;\r\n}\r\n\r\n.content p{\r\n    width: 20em;\r\n    height: 20em;\r\n    background-color: aquamarine;\r\n}",
                    "styleUrl": "./patient-file.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "patientManagementService",
                        "type": "PatientMangamentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "patientManagementService",
                        "type": "PatientMangamentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"patient-file-root\">\r\n    <div class=\"content\">\r\n        <p>patient-file works!</p>\r\n    </div>\r\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-12b28c801031d2822e6d77a5a45d8e74291bd0fd8ab7b1446755322067bf1d02775795e3041db1199230cb0968b386a6185c2848c462a6f68fcf3e974204cb8c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { CreatePatientComponent } from './components/create-patient/create-patient.component';\r\nimport { PatientFileComponent } from './components/patient-file/patient-file.component';\r\nimport { CreateMedicalCenterComponent } from './components/create-medical-center/create-medical-center.component';\r\nimport { EditMedicalCenterComponent } from './components/edit-medical-center/edit-medical-center.component';\r\nimport { CreateOrganizationComponent } from './components/create-organization/create-organization.component';\r\nimport { EditOrganizationComponent } from './components/edit-organization/edit-organization.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    CreatePatientComponent,\r\n    PatientFileComponent,\r\n    CreateMedicalCenterComponent,\r\n    EditMedicalCenterComponent,\r\n    CreateOrganizationComponent,\r\n    EditOrganizationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CreateMedicalCenterComponent"
                        },
                        {
                            "name": "CreateOrganizationComponent"
                        },
                        {
                            "name": "CreatePatientComponent"
                        },
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "EditMedicalCenterComponent"
                        },
                        {
                            "name": "EditOrganizationComponent"
                        },
                        {
                            "name": "PatientFileComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-c42c533422570425038440f4814f74d5e2b7fa1a298322246b3abab1ebd6962079160b42664193727333f30c977a6efc0b493e99134cf63d65ab2b47dd820642",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { CreateMedicalCenterComponent } from './components/create-medical-center/create-medical-center.component';\r\nimport { CreateOrganizationComponent } from './components/create-organization/create-organization.component';\r\nimport { CreatePatientComponent } from './components/create-patient/create-patient.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { EditMedicalCenterComponent } from './components/edit-medical-center/edit-medical-center.component';\r\nimport { EditOrganizationComponent } from './components/edit-organization/edit-organization.component';\r\nimport { PatientFileComponent } from './components/patient-file/patient-file.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'web/dashboard', pathMatch: 'full' },\r\n  {path: 'web/dashboard', component: DashboardComponent},\r\n  {path: 'web/create-medical-center', component: CreateMedicalCenterComponent},\r\n  {path: 'web/create-organization', component: CreateOrganizationComponent},\r\n  {path: 'web/create-patient', component: CreatePatientComponent},\r\n  {path: 'web/edit-medical-center', component: EditMedicalCenterComponent},\r\n  {path: 'web/edit-organization', component: EditOrganizationComponent},\r\n  {path: 'web/edit-patient', component: PatientFileComponent},\r\n  {path: 'web/**', component: AppComponent},\r\n  {path: 'login', component: AppComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "API_URL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/patient-mangament.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "environment.apiUrl"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  apiUrl: \"https://patient-management-system-demo.herokuapp.com/api\"\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  apiUrl: \"http://localhost:8080/api\"\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = await canvas.getByRole('button', {\n      name: /Log in/i,\n    });\n    await userEvent.click(loginButton);\n  },\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n}"
            },
            {
                "name": "MEDICAL_CENTER_URL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/patient-mangament.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'/medical-centers'"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Button>",
                "defaultValue": "{\n  title: 'Example/Button',\n  component: Button,\n  tags: ['autodocs'],\n  render: (args: Button) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Header>",
                "defaultValue": "{\n  title: 'Example/Header',\n  component: Header,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/angular/writing-docs/autodocs\n  tags: ['autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      declarations: [Button],\n      imports: [CommonModule],\n    }),\n  ],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Page>",
                "defaultValue": "{\n  title: 'Example/Page',\n  component: Page,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [Button, Header],\n      imports: [CommonModule],\n    }),\n  ],\n}"
            },
            {
                "name": "ORGANIZATION_URL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/patient-mangament.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "API_URL + '/v1/organizations'"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Button>",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Header>",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Page>",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/services/patient-mangament.service.ts": [
                {
                    "name": "API_URL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/patient-mangament.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "environment.apiUrl"
                },
                {
                    "name": "MEDICAL_CENTER_URL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/patient-mangament.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'/medical-centers'"
                },
                {
                    "name": "ORGANIZATION_URL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/patient-mangament.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "API_URL + '/v1/organizations'"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  apiUrl: \"https://patient-management-system-demo.herokuapp.com/api\"\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  apiUrl: \"http://localhost:8080/api\"\r\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Button>",
                    "defaultValue": "{\n  title: 'Example/Button',\n  component: Button,\n  tags: ['autodocs'],\n  render: (args: Button) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Header>",
                    "defaultValue": "{\n  title: 'Example/Header',\n  component: Header,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/angular/writing-docs/autodocs\n  tags: ['autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      declarations: [Button],\n      imports: [CommonModule],\n    }),\n  ],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = await canvas.getByRole('button', {\n      name: /Log in/i,\n    });\n    await userEvent.click(loginButton);\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Page>",
                    "defaultValue": "{\n  title: 'Example/Page',\n  component: Page,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [Button, Header],\n      imports: [CommonModule],\n    }),\n  ],\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/Button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Button>",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Header>",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Page>",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "web/dashboard",
                        "pathMatch": "full"
                    },
                    {
                        "path": "web/dashboard",
                        "component": "DashboardComponent"
                    },
                    {
                        "path": "web/create-medical-center",
                        "component": "CreateMedicalCenterComponent"
                    },
                    {
                        "path": "web/create-organization",
                        "component": "CreateOrganizationComponent"
                    },
                    {
                        "path": "web/create-patient",
                        "component": "CreatePatientComponent"
                    },
                    {
                        "path": "web/edit-medical-center",
                        "component": "EditMedicalCenterComponent"
                    },
                    {
                        "path": "web/edit-organization",
                        "component": "EditOrganizationComponent"
                    },
                    {
                        "path": "web/edit-patient",
                        "component": "PatientFileComponent"
                    },
                    {
                        "path": "web/**",
                        "component": "AppComponent"
                    },
                    {
                        "path": "login",
                        "component": "AppComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/create-medical-center/create-medical-center.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateMedicalCenterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/create-organization/create-organization.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateOrganizationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/create-patient/create-patient.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreatePatientComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/edit-medical-center/edit-medical-center.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditMedicalCenterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/edit-organization/edit-organization.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditOrganizationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/patient-file/patient-file.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PatientFileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/medical-center.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MedicalCenter",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/organization.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Organization",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/patient-mangament.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PatientMangamentService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/patient-mangament.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "API_URL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/patient-mangament.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MEDICAL_CENTER_URL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/patient-mangament.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ORGANIZATION_URL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}